<section class="min-h-screen bg-gray-50 dark:bg-gray-900 p-8 text-gray-900 dark:text-white animate-fadeIn">
  <!-- Header Section -->
  <div class="flex justify-between items-center mb-8 bg-white dark:bg-gray-800 p-8 rounded-2xl shadow-lg">
    <div>
      <h1 class="text-4xl font-bold bg-gradient-to-r from-indigo-900 to-blue-700 bg-clip-text text-transparent">Dashboard Overview</h1>
      <p class="text-gray-500 dark:text-gray-300 mt-2 text-lg">Welcome back! Here's what's happening with your IT assets.</p>
    </div>
    <div class="flex gap-4 items-center">
      <div class="relative flex items-center">
        <i class="fas fa-search absolute left-4 text-gray-400"></i>
        <input type="text" id="globalSearch" placeholder="Search assets, employees..."
          class="pl-10 pr-4 py-3 border-2 border-gray-200 dark:border-gray-700 rounded-xl text-base w-72 transition focus:outline-none focus:border-indigo-900 bg-white dark:bg-gray-900 text-gray-900 dark:text-white" />
      </div>
      <div class="relative group">
        <button class="bg-gradient-to-r from-indigo-900 to-blue-700 text-white border-none px-6 py-3 rounded-xl font-semibold flex items-center gap-2 transition hover:-translate-y-0.5 hover:shadow-xl">
          <i class="fas fa-plus"></i>
          <span>Quick Add</span>
        </button>
        <div class="absolute top-full right-0 bg-white dark:bg-gray-800 rounded-xl shadow-xl p-2 min-w-[200px] opacity-0 group-hover:opacity-100 group-hover:visible invisible transition z-10 border border-gray-100 dark:border-gray-700">
          <a href="/items/new" class="flex items-center gap-3 px-4 py-3 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-900 text-gray-900 dark:text-white"><i class="fas fa-laptop"></i>New Asset</a>
          <a href="/employees/new" class="flex items-center gap-3 px-4 py-3 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-900 text-gray-900 dark:text-white"><i class="fas fa-user-plus"></i>New Employee</a>
          <a href="/items/new-receipt" class="flex items-center gap-3 px-4 py-3 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-900 text-gray-900 dark:text-white"><i class="fas fa-receipt"></i>Purchase Receipt</a>
        </div>
      </div>
    </div>
  </div>

  <!-- Key Metrics -->
  <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <a href="/items" class="bg-white dark:bg-gray-800 rounded-2xl p-8 flex items-center gap-6 shadow-lg transition hover:-translate-y-1 hover:shadow-2xl relative overflow-hidden text-inherit no-underline border-t-4 border-indigo-900">
      <div class="w-16 h-16 rounded-xl flex items-center justify-center text-2xl text-white bg-indigo-900">
        <i class="fas fa-server"></i>
      </div>
      <div>
        <span class="text-3xl font-bold text-gray-900 dark:text-white"><%= stats.itemCount %></span>
        <span class="block text-gray-500 dark:text-gray-300 text-sm">Total Assets</span>
        <span class="block text-green-500 text-xs">Click to view all</span>
      </div>
    </a>
    <a href="/employees" class="bg-white dark:bg-gray-800 rounded-2xl p-8 flex items-center gap-6 shadow-lg transition hover:-translate-y-1 hover:shadow-2xl relative overflow-hidden text-inherit no-underline border-t-4 border-green-400">
      <div class="w-16 h-16 rounded-xl flex items-center justify-center text-2xl text-white bg-green-400">
        <i class="fas fa-users"></i>
      </div>
      <div>
        <span class="text-3xl font-bold text-gray-900 dark:text-white"><%= stats.employeeCount %></span>
        <span class="block text-gray-500 dark:text-gray-300 text-sm">Active Users</span>
        <span class="block text-green-500 text-xs">Click to manage</span>
      </div>
    </a>
    <a href="/items?filter=unassigned" class="bg-white dark:bg-gray-800 rounded-2xl p-8 flex items-center gap-6 shadow-lg transition hover:-translate-y-1 hover:shadow-2xl relative overflow-hidden text-inherit no-underline border-t-4 border-yellow-400">
      <div class="w-16 h-16 rounded-xl flex items-center justify-center text-2xl text-white bg-yellow-400">
        <i class="fas fa-exclamation-triangle"></i>
      </div>
      <div>
        <span class="text-3xl font-bold text-gray-900 dark:text-white"><%= stats.unassignedCount %></span>
        <span class="block text-gray-500 dark:text-gray-300 text-sm">Unassigned</span>
        <span class="block text-yellow-500 text-xs">Need attention</span>
      </div>
    </a>
    <a href="/software" class="bg-white dark:bg-gray-800 rounded-2xl p-8 flex items-center gap-6 shadow-lg transition hover:-translate-y-1 hover:shadow-2xl relative overflow-hidden text-inherit no-underline border-t-4 border-blue-400">
      <div class="w-16 h-16 rounded-xl flex items-center justify-center text-2xl text-white bg-blue-400">
        <i class="fas fa-building"></i>
      </div>
      <div>
        <span class="text-3xl font-bold text-gray-900 dark:text-white"><%= stats.departmentCount %></span>
        <span class="block text-gray-500 dark:text-gray-300 text-sm">Software</span>
        <span class="block text-blue-500 text-xs">Active licenses</span>
      </div>
    </a>
  </div>

  <!-- Main Content Grid -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
    <!-- Asset Distribution Chart -->
    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden transition">
      <div class="flex justify-between items-center px-8 py-6 border-b border-gray-100 dark:border-gray-700">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Asset Distribution</h3>
        <a href="/items" class="text-indigo-900 dark:text-indigo-400 text-sm font-medium hover:underline">View All Assets</a>
      </div>
      <div class="px-8 py-6">
        <% itemsByType.forEach((item, index) => { %>
          <div class="flex justify-between items-center py-4 border-b border-gray-100 dark:border-gray-700 last:border-b-0">
            <div>
              <span class="font-semibold text-gray-900 dark:text-white text-base"><%= item.name %></span>
              <span class="block text-gray-500 dark:text-gray-300 text-xs"><%= item.count %> items</span>
            </div>
            <div>
              <% const percentage = Math.round((item.count / stats.itemCount) * 100) %>
              <span class="text-lg font-bold text-indigo-900 dark:text-indigo-400"><%= percentage %>%</span>
            </div>
          </div>
        <% }) %>
      </div>
    </div>
    <%
// Helper to choose icon based on activity action
function activityIcon(action) {
  switch (action) {
    case 'created': return 'fa-plus';
    case 'updated': return 'fa-edit';
    case 'assigned': return 'fa-arrow-right';
    case 'unassigned': return 'fa-arrow-left';
    case 'deleted': return 'fa-trash';
    default: return 'fa-info-circle';
  }
}
%>
    <!-- Recent Activity -->
    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden transition">
      <div class="flex justify-between items-center px-8 py-6 border-b border-gray-100 dark:border-gray-700">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Recent Activity</h3>
        <a href="/activity" class="text-indigo-900 dark:text-indigo-400 text-sm font-medium hover:underline">View All</a>
      </div>
      <div class="px-8 py-6">
        <% recentActivities.slice(0, 5).forEach(activity => { %>
          <div class="flex items-center gap-4 py-4 border-b border-gray-100 dark:border-gray-700 last:border-b-0">
            <div class="w-10 h-10 bg-gradient-to-r from-indigo-900 to-blue-700 rounded-lg flex items-center justify-center text-white text-lg">
              <i class="fas <%= activityIcon(activity.action) %>"></i>
            </div>
            <div class="flex-1 min-w-0">
              <%
                let name, url;
                if (activity.entity_type === 'item') {
                  name = activity.details.name || activity.details.item_name || activity.entity_id;
                  url = activity.details.cep_brc
                    ? `/items/${activity.entity_id}/${activity.details.cep_brc}`
                    : `/items/${activity.entity_id}`;
                } else if (activity.entity_type === 'employee') {
                  name = activity.details.name || activity.details.employee_name || activity.entity_id;
                  url = `/employees/${activity.entity_id}`;
                } else if (activity.entity_type === 'software') {
                  name = activity.details.name || activity.details.software_name || activity.entity_id;
                  url = `/software/${activity.entity_id}`;
                } else {
                  name = activity.details.summary || activity.details.name || activity.details.title || '-';
                  url = '#';
                }
              %>
              <a href="<%= url %>" class="font-semibold text-lg text-indigo-900 dark:text-indigo-400 hover:underline block">
                <%= name %>
              </a>
              <div class="text-xs text-gray-500 dark:text-gray-400 mt-1">
                <%= activity.action.charAt(0).toUpperCase() + activity.action.slice(1) %>
                <span>on <%= activity.entity_type %></span>
              </div>
            </div>
            <div class="flex flex-col items-end min-w-[120px]">
              <span class="font-mono text-xs text-gray-500 dark:text-gray-400"><%= new Date(activity.created_at).toLocaleString() %></span>
              <span class="text-xs text-indigo-900 dark:text-indigo-400 font-semibold"><%= activity.user_name || 'System' %></span>
            </div>
          </div>
        <% }) %>
      </div>
    </div>

    <!-- System Overview -->
    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden transition">
      <div class="flex justify-between items-center px-8 py-6 bg-gradient-to-r from-indigo-900 to-blue-700 text-white">
        <h3 class="text-lg font-semibold">System Overview</h3>
        <span class="bg-green-400 text-indigo-900 px-3 py-1 rounded-full text-xs font-semibold">ONLINE</span>
      </div>
      <div class="px-8 py-6">
        <div class="flex justify-between items-center py-3 border-b border-gray-100 dark:border-gray-700">
          <span class="text-gray-500 dark:text-gray-300 text-sm">Total Assets</span>
          <span class="font-semibold text-gray-900 dark:text-white"><%= stats.itemCount %></span>
        </div>
        <div class="flex justify-between items-center py-3 border-b border-gray-100 dark:border-gray-700">
          <span class="text-gray-500 dark:text-gray-300 text-sm">Active Employees</span>
          <span class="font-semibold text-gray-900 dark:text-white"><%= stats.employeeCount %></span>
        </div>
        <div class="flex justify-between items-center py-3 border-b border-gray-100 dark:border-gray-700">
          <span class="text-gray-500 dark:text-gray-300 text-sm">Assigned Assets</span>
          <span class="font-semibold text-gray-900 dark:text-white"><%= stats.itemCount - stats.unassignedCount %></span>
        </div>
        <div class="flex justify-between items-center py-3">
          <span class="text-gray-500 dark:text-gray-300 text-sm">Assignment Rate</span>
          <span class="font-semibold text-green-400">
            <%= stats.itemCount > 0 ? Math.round(((stats.itemCount - stats.unassignedCount) / stats.itemCount) * 100) : 0 %>%
          </span>
        </div>
      </div>
    </div>

    <!-- Quick Insights -->
    <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden transition">
      <div class="flex justify-between items-center px-8 py-6 border-b border-gray-100 dark:border-gray-700">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Quick Insights</h3>
        <button class="bg-transparent border-none text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-900 p-2 rounded-lg transition" onclick="refreshInsights()">
          <i class="fas fa-refresh"></i>
        </button>
      </div>
      <div class="px-8 py-6">
        <div class="flex items-center gap-4 py-4 border-b border-gray-100 dark:border-gray-700">
          <div class="w-10 h-10 rounded-lg flex items-center justify-center text-white bg-green-400 text-lg">
            <i class="fas fa-check-circle"></i>
          </div>
          <div>
            <h4 class="font-semibold text-gray-900 dark:text-white text-base mb-1">System Health</h4>
            <p class="text-gray-500 dark:text-gray-300 text-xs m-0">All systems operational and running smoothly</p>
          </div>
        </div>
        <div class="flex items-center gap-4 py-4 border-b border-gray-100 dark:border-gray-700">
          <div class="w-10 h-10 rounded-lg flex items-center justify-center text-white bg-blue-400 text-lg">
            <i class="fas fa-info-circle"></i>
          </div>
          <div>
            <h4 class="font-semibold text-gray-900 dark:text-white text-base mb-1">Recent Activity</h4>
            <p class="text-gray-500 dark:text-gray-300 text-xs m-0"><%= recentItems.length %> assets updated in the last 30 days</p>
          </div>
        </div>
        <% if (stats.unassignedCount > 0) { %>
        <div class="flex items-center gap-4 py-4">
          <div class="w-10 h-10 rounded-lg flex items-center justify-center text-white bg-yellow-400 text-lg">
            <i class="fas fa-exclamation-triangle"></i>
          </div>
          <div>
            <h4 class="font-semibold text-gray-900 dark:text-white text-base mb-1">Attention Required</h4>
            <p class="text-gray-500 dark:text-gray-300 text-xs m-0"><%= stats.unassignedCount %> assets need to be assigned</p>
          </div>
        </div>
        <% } %>
      </div>
    </div>
  </div>

  <!-- Quick Actions -->
  <div class="flex flex-wrap gap-4 justify-center">
    <a href="/items/new" class="flex items-center gap-2 px-8 py-4 bg-gradient-to-r from-indigo-900 to-blue-700 text-white rounded-xl font-medium shadow-lg transition hover:-translate-y-1 hover:shadow-2xl">
      <i class="fas fa-plus"></i>
      <span>Add Asset</span>
    </a>
    <a href="/employees/new" class="flex items-center gap-2 px-8 py-4 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-xl font-medium shadow-lg transition hover:-translate-y-1 hover:shadow-2xl">
      <i class="fas fa-user-plus"></i>
      <span>Add Employee</span>
    </a>
    <a href="/reports/export-assets" class="flex items-center gap-2 px-8 py-4 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-xl font-medium shadow-lg transition hover:-translate-y-1 hover:shadow-2xl">
      <i class="fas fa-download"></i>
      <span>Export Data</span>
    </a>
    <a href="/items" class="flex items-center gap-2 px-8 py-4 bg-white dark:bg-gray-800 text-gray-900 dark:text-white rounded-xl font-medium shadow-lg transition hover:-translate-y-1 hover:shadow-2xl">
      <i class="fas fa-list"></i>
      <span>View All Assets</span>
    </a>
  </div>
</section>

<style>
/* Global Search Results Styling */
.global-search-results {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  margin-top: 0.5rem;
  background: white;
  border-radius: 0.75rem;
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  border: 1px solid #e5e7eb;
  max-height: 24rem;
  overflow-y: auto;
  z-index: 50;
  backdrop-filter: blur(8px);
  animation: searchResultsAppear 0.2s ease-out;
}

.dark .global-search-results {
  background: #1f2937;
  border-color: #374151;
}

/* Search States */
.search-loading,
.search-error,
.search-no-results {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  padding: 1.5rem;
  color: #6b7280;
}

.dark .search-loading,
.dark .search-error,
.dark .search-no-results {
  color: #9ca3af;
}

.search-loading i {
  color: #4f46e5;
  animation: spin 1s linear infinite;
}

.dark .search-loading i {
  color: #818cf8;
}

.search-error {
  color: #ef4444;
}

.dark .search-error {
  color: #f87171;
}

.search-no-results i {
  font-size: 1.5rem;
}

/* Category Styling */
.search-category {
  border-bottom: 1px solid #f3f4f6;
}

.dark .search-category {
  border-bottom-color: #374151;
}

.search-category:last-child {
  border-bottom: none;
}

.search-category-header {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.75rem 1rem;
  background: #f9fafb;
  font-size: 0.875rem;
  font-weight: 600;
  color: #374151;
  position: sticky;
  top: 0;
  z-index: 10;
}

.dark .search-category-header {
  background: #111827;
  color: #d1d5db;
}

.search-category-header i {
  color: #4f46e5;
}

.dark .search-category-header i {
  color: #818cf8;
}

.result-count {
  margin-left: auto;
  background: #e0e7ff;
  color: #3730a3;
  padding: 0.25rem 0.5rem;
  border-radius: 9999px;
  font-size: 0.75rem;
}

.dark .result-count {
  background: #312e81;
  color: #a5b4fc;
}

/* Result Items */
.search-result-item {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.75rem 1rem;
  cursor: pointer;
  transition: all 0.2s;
  border-left: 4px solid transparent;
}

.search-result-item:hover {
  background: linear-gradient(to right, #eef2ff 0%, transparent 100%);
  border-left-color: #6366f1;
}

.dark .search-result-item:hover {
  background: linear-gradient(to right, rgba(79, 70, 229, 0.1) 0%, transparent 100%);
  border-left-color: #818cf8;
}

.search-result-item.active {
  background: #eef2ff;
  border-left-color: #6366f1;
}

.dark .search-result-item.active {
  background: rgba(79, 70, 229, 0.2);
  border-left-color: #818cf8;
}

.search-result-item:focus {
  outline: none;
  box-shadow: 0 0 0 2px #6366f1, 0 0 0 4px rgba(99, 102, 241, 0.2);
}

/* Result Content */
.result-icon {
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 0.5rem;
  background: linear-gradient(135deg, #6366f1 0%, #3b82f6 100%);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 0.875rem;
  flex-shrink: 0;
}

.result-content {
  flex: 1;
  min-width: 0;
}

.result-title {
  font-weight: 600;
  color: #111827;
  font-size: 0.875rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.dark .result-title {
  color: white;
}

.result-title mark {
  background: #fef3c7;
  color: #92400e;
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
}

.dark .result-title mark {
  background: #451a03;
  color: #fbbf24;
}

.result-subtitle {
  font-size: 0.75rem;
  color: #6b7280;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-top: 0.25rem;
}

.dark .result-subtitle {
  color: #9ca3af;
}

.result-identifier {
  font-size: 0.75rem;
  color: #4f46e5;
  font-family: 'Monaco', 'Menlo', monospace;
  margin-top: 0.25rem;
}

.dark .result-identifier {
  color: #818cf8;
}

.result-category-badge {
  background: #f3f4f6;
  color: #4b5563;
  padding: 0.25rem 0.5rem;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 500;
  flex-shrink: 0;
}

.dark .result-category-badge {
  background: #374151;
  color: #d1d5db;
}

/* Links */
.search-show-more {
  padding: 0.5rem 1rem;
  border-top: 1px solid #f3f4f6;
}

.dark .search-show-more {
  border-top-color: #374151;
}

.search-show-more a {
  font-size: 0.875rem;
  color: #4f46e5;
  font-weight: 500;
  transition: color 0.2s;
  text-decoration: none;
}

.dark .search-show-more a {
  color: #818cf8;
}

.search-show-more a:hover {
  color: #3730a3;
}

.dark .search-show-more a:hover {
  color: #a5b4fc;
}

.search-view-all {
  border-top: 1px solid #e5e7eb;
  background: #f9fafb;
  padding: 1rem;
}

.dark .search-view-all {
  border-top-color: #4b5563;
  background: #1f2937;
}

.search-view-all a {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  font-weight: 600;
  color: #4f46e5;
  transition: color 0.2s;
  text-decoration: none;
}

.dark .search-view-all a {
  color: #818cf8;
}

.search-view-all a:hover {
  color: #3730a3;
}

.dark .search-view-all a:hover {
  color: #a5b4fc;
}

/* Responsive */
@media (max-width: 768px) {
  .global-search-results {
    left: 1rem;
    right: 1rem;
    max-height: 20rem;
  }

  .search-result-item {
    padding: 0.5rem 0.75rem;
  }

  .result-icon {
    width: 2rem;
    height: 2rem;
    font-size: 0.75rem;
  }

  .result-title {
    font-size: 0.75rem;
  }
}

/* Scrollbar */
.global-search-results::-webkit-scrollbar {
  width: 4px;
}

.global-search-results::-webkit-scrollbar-track {
  background: #f3f4f6;
}

.dark .global-search-results::-webkit-scrollbar-track {
  background: #1f2937;
}

.global-search-results::-webkit-scrollbar-thumb {
  background: #d1d5db;
  border-radius: 2px;
}

.dark .global-search-results::-webkit-scrollbar-thumb {
  background: #4b5563;
}

.global-search-results::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}

.dark .global-search-results::-webkit-scrollbar-thumb:hover {
  background: #6b7280;
}

/* Animations */
@keyframes searchResultsAppear {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Hidden class override */
.hidden {
  display: none !important;
}
</style>

<script>
  function refreshInsights() {
    console.log('Refreshing insights...');
    // Add refresh functionality here
  }

  // Global search functionality
  document.addEventListener('DOMContentLoaded', function() {
    const globalSearch = document.getElementById('globalSearch');
    const searchResults = document.createElement('div');
    searchResults.className = 'global-search-results hidden';
    // Position the search results relative to the search input
    globalSearch.parentNode.style.position = 'relative';
    globalSearch.parentNode.appendChild(searchResults);

    let searchTimeout;
    let isSearching = false;

    globalSearch.addEventListener('input', function(e) {
      const searchTerm = e.target.value.trim();

      // Clear previous timeout
      clearTimeout(searchTimeout);

      if (searchTerm.length < 2) {
        hideSearchResults();
        return;
      }

      // Show loading state
      showLoadingState();

      // Debounce search requests
      searchTimeout = setTimeout(() => {
        performSearch(searchTerm);
      }, 300);
    });

    globalSearch.addEventListener('focus', function() {
      if (this.value.trim().length >= 2) {
        searchResults.classList.remove('hidden');
      }
    });

    // Hide results when clicking outside
    document.addEventListener('click', function(e) {
      if (!globalSearch.contains(e.target) && !searchResults.contains(e.target)) {
        hideSearchResults();
      }
    });

    // Handle keyboard navigation
    globalSearch.addEventListener('keydown', function(e) {
      const resultItems = searchResults.querySelectorAll('.search-result-item');
      const currentActive = searchResults.querySelector('.search-result-item.active');

      if (e.key === 'ArrowDown') {
        e.preventDefault();
        navigateResults(resultItems, currentActive, 'down');
      } else if (e.key === 'ArrowUp') {
        e.preventDefault();
        navigateResults(resultItems, currentActive, 'up');
      } else if (e.key === 'Enter') {
        e.preventDefault();
        const activeItem = searchResults.querySelector('.search-result-item.active');
        if (activeItem) {
          window.location.href = activeItem.dataset.url;
        }
      } else if (e.key === 'Escape') {
        hideSearchResults();
        globalSearch.blur();
      }
    });

    function performSearch(query) {
      if (isSearching) return;

      isSearching = true;

      fetch(`/api/search?query=${encodeURIComponent(query)}`)
        .then(response => response.json())
        .then(data => {
          displaySearchResults(data.results || {});
        })
        .catch(error => {
          console.error('Search error:', error);
          showErrorState();
        })
        .finally(() => {
          isSearching = false;
        });
    }

    function showLoadingState() {
      searchResults.innerHTML = `
        <div class="search-loading">
          <i class="fas fa-spinner fa-spin"></i>
          <span>Searching...</span>
        </div>
      `;
      searchResults.classList.remove('hidden');
    }

    function showErrorState() {
      searchResults.innerHTML = `
        <div class="search-error">
          <i class="fas fa-exclamation-triangle"></i>
          <span>Search temporarily unavailable</span>
        </div>
      `;
    }

    function displaySearchResults(results) {
      let html = '';
      let totalResults = 0;

      // Count total results
      Object.values(results).forEach(category => {
        totalResults += category.length;
      });

      if (totalResults === 0) {
        html = `
          <div class="search-no-results">
            <i class="fas fa-search"></i>
            <span>No results found</span>
          </div>
        `;
      } else {
        // Display results by category
        Object.entries(results).forEach(([category, items]) => {
          if (items.length > 0) {
            html += `<div class="search-category">
              <div class="search-category-header">
                <i class="fas fa-${getCategoryIcon(category)}"></i>
                <span>${category}</span>
                <span class="result-count">${items.length}</span>
              </div>
            `;

            items.slice(0, 5).forEach(item => { // Limit to 5 results per category
              html += `
                <div class="search-result-item" data-url="${item.url}" data-category="${category}" tabindex="0">
                  <div class="result-icon">
                    <i class="fas fa-${item.icon || getCategoryIcon(category)}"></i>
                  </div>
                  <div class="result-content">
                    <div class="result-title">${highlightSearchTerm(item.title, globalSearch.value)}</div>
                    <div class="result-subtitle">${item.subtitle}</div>
                    ${item.identifier ? `<div class="result-identifier">${item.identifier}</div>` : ''}
                  </div>
                  <div class="result-category-badge">${category}</div>
                </div>
              `;
            });

            if (items.length > 5) {
              html += `
                <div class="search-show-more">
                  <a href="/search?q=${encodeURIComponent(globalSearch.value)}&category=${category.toLowerCase()}">
                    Show ${items.length - 5} more ${category.toLowerCase()}...
                  </a>
                </div>
              `;
            }

            html += '</div>';
          }
        });

        // Add "View All Results" link
        if (totalResults > 10) {
          html += `
            <div class="search-view-all">
              <a href="/search?q=${encodeURIComponent(globalSearch.value)}">
                <i class="fas fa-external-link-alt"></i>
                View all ${totalResults} results
              </a>
            </div>
          `;
        }
      }

      searchResults.innerHTML = html;
      searchResults.classList.remove('hidden');

      // Add click handlers to result items
      searchResults.querySelectorAll('.search-result-item').forEach(item => {
        item.addEventListener('click', function() {
          window.location.href = this.dataset.url;
        });

        item.addEventListener('mouseenter', function() {
          searchResults.querySelectorAll('.search-result-item.active').forEach(active => {
            active.classList.remove('active');
          });
          this.classList.add('active');
        });
      });
    }

    function navigateResults(items, currentActive, direction) {
      if (items.length === 0) return;

      let newIndex = 0;

      if (currentActive) {
        const currentIndex = Array.from(items).indexOf(currentActive);
        currentActive.classList.remove('active');

        if (direction === 'down') {
          newIndex = currentIndex + 1 >= items.length ? 0 : currentIndex + 1;
        } else {
          newIndex = currentIndex - 1 < 0 ? items.length - 1 : currentIndex - 1;
        }
      }

      items[newIndex].classList.add('active');
      items[newIndex].scrollIntoView({ block: 'nearest' });
    }

    function getCategoryIcon(category) {
      const icons = {
        'Items': 'laptop',
        'Employees': 'users',
        'Locations': 'map-marker-alt',
        'Departments': 'building'
      };
      return icons[category] || 'search';
    }

    function highlightSearchTerm(text, term) {
      if (!term) return text;
      const regex = new RegExp(`(${term})`, 'gi');
      return text.replace(regex, '<mark>$1</mark>');
    }

    function hideSearchResults() {
      searchResults.classList.add('hidden');
      searchResults.querySelectorAll('.search-result-item.active').forEach(item => {
        item.classList.remove('active');
      });
    }
  });
</script>
