<div class="page-container">
  <div class="page-header-simple">
    <div class="header-title-section">
      <div class="breadcrumb-nav">
        <a href="/employees" class="breadcrumb-link">
          <i class="fas fa-users"></i> Employees
        </a>
        <i class="fas fa-chevron-right breadcrumb-separator"></i>
        <span class="breadcrumb-current"><%= employee.name %></span>
      </div>
      <h1><%= employee.name %></h1>
      <div class="employee-meta">
        <span class="employee-id-display">ID: <%= employee.cep %></span>
        <%
          let statusClass = 'status-active';
          let statusIcon = 'fas fa-check-circle';
          let statusText = 'Active';

          if (employee.left_date) {
            statusClass = 'status-inactive';
            statusIcon = 'fas fa-user-times';
            statusText = 'Former Employee';
          }
        %>
        <span class="employee-status <%= statusClass %>">
          <i class="<%= statusIcon %>"></i> <%= statusText %>
        </span>
      </div>
    </div>
    <div class="header-actions">
      <div class="action-buttons">
        <a href="/employees" class="btn btn-secondary">
          <i class="fas fa-arrow-left"></i> Back to Employees
        </a>
        <a href="/employees/<%= employee.id %>/edit" class="btn btn-warning">
          <i class="fas fa-edit"></i> Edit
        </a>
        <a href="/employees/<%= employee.id %>/history" class="btn btn-info">
          <i class="fas fa-history"></i> History
        </a>
        <button onclick="printEmployeeCard()" class="btn btn-success">
          <i class="fas fa-print"></i> Print Card
        </button>
        <button type="button" class="btn btn-danger" id="deleteEmployeeBtn">
          <i class="fas fa-trash"></i> Delete
        </button>
      </div>
    </div>
  </div>

  <div class="content-section">
    <div class="employee-details-layout">
      <!-- Main Information Panel -->
      <div class="main-info-panel">
        <div class="info-section">
          <h2 class="section-title">
            <i class="fas fa-user"></i>
            Employee Information
          </h2>

          <div class="info-grid">
            <div class="info-item">
              <dt>Employee ID</dt>
              <dd>
                <span class="info-value code"><%= employee.cep %></span>
              </dd>
            </div>

            <div class="info-item">
              <dt>Email Address</dt>
              <dd>
                <span class="info-value">
                  <i class="fas fa-envelope"></i>
                  <a href="mailto:<%= employee.email %>"><%= employee.email %></a>
                </span>
              </dd>
            </div>

            <div class="info-item">
              <dt>Department</dt>
              <dd>
                <% if (employee.department_name) { %>
                  <span class="info-value primary">
                    <i class="fas fa-building"></i> <%= employee.department_name %>
                  </span>
                <% } else { %>
                  <span class="info-value muted">Not assigned</span>
                <% } %>
              </dd>
            </div>

            <div class="info-item">
              <dt>Location</dt>
              <dd>
                <% if (employee.location_name) { %>
                  <span class="info-value">
                    <i class="fas fa-map-marker-alt"></i> <%= employee.location_name %>
                  </span>
                <% } else { %>
                  <span class="info-value muted">Not assigned</span>
                <% } %>
              </dd>
            </div>

            <div class="info-item">
              <dt>Start Date</dt>
              <dd>
                <span class="info-value">
                  <i class="fas fa-calendar-plus"></i>
                  <%= new Date(employee.joined_date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  }) %>
                </span>
              </dd>
            </div>

            <% if (employee.left_date) { %>
            <div class="info-item">
              <dt>End Date</dt>
              <dd>
                <span class="info-value">
                  <i class="fas fa-calendar-times"></i>
                  <%= new Date(employee.left_date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  }) %>
                </span>
              </dd>
            </div>
            <% } %>

            <% if (employee.job_title) { %>
            <div class="info-item">
              <dt>Job Title</dt>
              <dd>
                <span class="info-value">
                  <i class="fas fa-user-tie"></i> <%= employee.job_title %>
                </span>
              </dd>
            </div>
            <% } %>
          </div>
        </div>

        <!-- Software Assignments Section -->
        <div class="info-section">
          <h2 class="section-title">
            <i class="fas fa-laptop-code"></i>
            Software Assignments
          </h2>

          <% if (software && software.length > 0) { %>
            <div class="software-assignments-grid">
              <% software.forEach(sw => { %>
                <div class="software-assignment-card">
                  <div class="software-header">
                    <div class="software-name"><%= sw.name %></div>
                    <% if (sw.version) { %>
                      <span class="version">v<%= sw.version %></span>
                    <% } %>
                  </div>

                  <div class="software-details">
                    <% if (sw.vendor) { %>
                      <span class="vendor">
                        <i class="fas fa-building"></i> <%= sw.vendor %>
                      </span>
                    <% } %>
                    <% if (sw.license_type) { %>
                      <span class="license-type">
                        <i class="fas fa-certificate"></i> <%= sw.license_type %>
                      </span>
                    <% } %>
                  </div>

                  <% if (sw.assigned_date) { %>
                    <div class="assignment-date">
                      <i class="fas fa-calendar-check"></i>
                      Assigned <%= new Date(sw.assigned_date).toLocaleDateString() %>
                    </div>
                  <% } %>

                  <% if (sw.license_key) { %>
                    <div class="license-key">
                      <i class="fas fa-key"></i>
                      <span class="key-value"><%= sw.license_key %></span>
                    </div>
                  <% } %>
                </div>
              <% }) %>
            </div>
          <% } else { %>
            <div class="empty-state-inline">
              <div class="empty-icon">
                <i class="fas fa-laptop-code"></i>
              </div>
              <div class="empty-text">
                <h4>No Software Assigned</h4>
                <p>This employee doesn't have any software licenses assigned yet.</p>
              </div>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Assets Panel -->
      <div class="assets-panel">
        <div class="assets-section">
          <h2 class="section-title">
            <i class="fas fa-boxes"></i>
            Assigned Assets
            <% if (items && items.length > 0) { %>
              <span class="count-badge"><%= items.length %></span>
            <% } %>
          </h2>

          <div class="assets-info">
            <% if (items && items.length > 0) { %>
              <div class="assets-list">
                <% items.forEach(item => { %>
                  <div class="asset-item-card">
                    <div class="asset-header">
                      <div class="asset-id">
                        <span class="asset-id-badge"><%= item.cep_brc %></span>
                      </div>
                      <div class="asset-actions">
                        <a href="/items/<%= item.id %>/<%= item.cep_brc %>" class="btn-view" title="View Asset">
                          <i class="fas fa-eye"></i>
                        </a>
                      </div>
                    </div>

                    <div class="asset-content">
                      <h4 class="asset-name">
                        <a href="/items/<%= item.id %>/<%= item.cep_brc %>"><%= item.name %></a>
                      </h4>

                      <div class="asset-details">
                        <div class="asset-detail">
                          <span class="detail-label">Type:</span>
                          <span class="detail-value"><%= item.type_name || 'N/A' %></span>
                        </div>
                        <% if (item.brand_name) { %>
                          <div class="asset-detail">
                            <span class="detail-label">Brand:</span>
                            <span class="detail-value"><%= item.brand_name %></span>
                          </div>
                        <% } %>
                        <% if (item.model) { %>
                          <div class="asset-detail">
                            <span class="detail-label">Model:</span>
                            <span class="detail-value"><%= item.model %></span>
                          </div>
                        <% } %>
                        <% if (item.date_assigned) { %>
                          <div class="asset-detail">
                            <span class="detail-label">Assigned:</span>
                            <span class="detail-value">
                              <i class="fas fa-calendar"></i>
                              <%= new Date(item.date_assigned).toLocaleDateString() %>
                            </span>
                          </div>
                        <% } %>
                      </div>
                    </div>
                  </div>
                <% }) %>
              </div>

              <div class="assets-summary">
                <div class="summary-stats">
                  <div class="stat-item">
                    <span class="stat-number"><%= items.length %></span>
                    <span class="stat-label">Total Assets</span>
                  </div>
                  <div class="stat-item">
                    <span class="stat-number">
                      <%= [...new Set(items.map(item => item.type_name).filter(Boolean))].length %>
                    </span>
                    <span class="stat-label">Asset Types</span>
                  </div>
                </div>
              </div>
            <% } else { %>
              <div class="unassigned-assets">
                <div class="unassigned-icon">
                  <i class="fas fa-box-open"></i>
                </div>
                <div class="unassigned-text">
                  <h4>No Assets Assigned</h4>
                  <p>This employee doesn't have any assets assigned currently.</p>
                </div>
              </div>
            <% } %>
          </div>
        </div>

        <!-- Quick Actions -->
        <div class="quick-actions-section">
          <h3 class="actions-title">Quick Actions</h3>
          <div class="actions-list">
            <a href="/employees/<%= employee.id %>/edit" class="action-item">
              <i class="fas fa-edit"></i>
              <span>Edit Employee</span>
            </a>
            <a href="/employees/<%= employee.id %>/history" class="action-item">
              <i class="fas fa-history"></i>
              <span>View History</span>
            </a>
            <button onclick="printEmployeeCard()" class="action-item action-button">
              <i class="fas fa-print"></i>
              <span>Print Card</span>
            </button>
            <% if (items && items.length > 0) { %>
              <button onclick="generateAssetReport()" class="action-item action-button">
                <i class="fas fa-file-alt"></i>
                <span>Asset Report</span>
              </button>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal-overlay" id="deleteEmployeeModal">
  <div class="modal-content warning-modal">
    <div class="modal-header">
      <i class="fas fa-exclamation-triangle modal-icon warning"></i>
      <h4>Confirm Employee Deletion</h4>
    </div>

    <div class="modal-body">
      <div id="noAssignedItems" style="display: none;">
        <p>Are you sure you want to delete <strong><%= employee.name %></strong>?</p>
        <p>This action cannot be undone.</p>
      </div>

      <div id="hasAssignedItems" style="display: none;">
        <p>This employee has assigned assets that will be unassigned:</p>
        <div class="modal-assets-container">
          <div class="assets-preview" id="assignedAssetsList"></div>
        </div>
        <div class="warning-message">
          <i class="fas fa-exclamation-triangle"></i>
          <span>All these assets will be unassigned and the employee will be deleted. This cannot be undone.</span>
        </div>
      </div>
    </div>

    <div class="modal-actions">
      <button type="button" class="btn btn-danger" id="confirmDelete">
        <i class="fas fa-trash"></i> Delete Employee
      </button>
      <button type="button" class="btn btn-secondary" id="cancelDelete">
        <i class="fas fa-times"></i> Cancel
      </button>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const deleteButton = document.getElementById('deleteEmployeeBtn');
  const modal = document.getElementById('deleteEmployeeModal');
  const cancelButton = document.getElementById('cancelDelete');
  const confirmButton = document.getElementById('confirmDelete');
  const noAssignedItems = document.getElementById('noAssignedItems');
  const hasAssignedItems = document.getElementById('hasAssignedItems');
  const assignedAssetsList = document.getElementById('assignedAssetsList');

  // When the delete button is clicked, check for assigned items
  deleteButton.addEventListener('click', function() {
    fetchAssignedItems();
  });

  // Close the modal when Cancel is clicked
  cancelButton.addEventListener('click', function() {
    modal.style.display = 'none';
  });

  // Handle the confirmation of deletion
  confirmButton.addEventListener('click', function() {
    unassignAndDeleteEmployee();
  });

  // Close when clicking outside the modal
  modal.addEventListener('click', function(event) {
    if (event.target === modal) {
      modal.style.display = 'none';
    }
  });

  // Fetch assigned items
  function fetchAssignedItems() {
    fetch('/employees/<%= employee.id %>/delete', {
      method: 'POST',
      headers: {
        'X-Requested-With': 'XMLHttpRequest',
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.hasAssignedItems) {
        // Display the assigned items in the modal
        hasAssignedItems.style.display = 'block';
        noAssignedItems.style.display = 'none';

        // Clear and populate the items list
        assignedAssetsList.innerHTML = '';
        data.items.forEach(item => {
          const assetCard = document.createElement('div');
          assetCard.className = 'modal-asset-card';
          assetCard.innerHTML = `
            <div class="modal-asset-header">
              <span class="modal-asset-id">${item.cep_brc}</span>
              <span class="modal-asset-name">${item.name}</span>
            </div>
            <div class="modal-asset-details">
              <span class="modal-asset-type">${item.type_name || 'N/A'}</span>
            </div>
          `;
          assignedAssetsList.appendChild(assetCard);
        });
      } else {
        // No assigned items, show simple confirmation
        hasAssignedItems.style.display = 'none';
        noAssignedItems.style.display = 'block';
      }

      // Show the modal
      modal.style.display = 'flex';
    })
    .catch(error => {
      console.error('Error fetching assigned items:', error);

      // Show error alert
      const errorAlert = document.createElement('div');
      errorAlert.className = 'alert alert-danger';
      errorAlert.innerHTML = `
        <i class="fas fa-exclamation-triangle"></i>
        <div>
          <strong>Error checking assigned items</strong>
          <p>Please try again or contact support if the problem persists.</p>
        </div>
      `;

      document.querySelector('.content-section').insertBefore(errorAlert, document.querySelector('.employee-details-layout'));

      setTimeout(() => {
        if (errorAlert.parentNode) {
          errorAlert.remove();
        }
      }, 5000);
    });
  }

  // Unassign all items and delete the employee
  function unassignAndDeleteEmployee() {
    confirmButton.disabled = true;
    confirmButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';

    fetch('/employees/<%= employee.id %>/unassign-and-delete', {
      method: 'POST',
      headers: {
        'X-Requested-With': 'XMLHttpRequest',
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        window.location.href = '/employees?deleted=true';
      } else {
        throw new Error(data.error || 'Unknown error occurred');
      }
    })
    .catch(error => {
      console.error('Error deleting employee:', error);

      // Show error in modal
      const errorDiv = document.createElement('div');
      errorDiv.className = 'alert alert-danger';
      errorDiv.style.marginTop = '1rem';
      errorDiv.innerHTML = `
        <i class="fas fa-exclamation-triangle"></i>
        <div>
          <strong>Error deleting employee</strong>
          <p>${error.message}</p>
        </div>
      `;

      document.querySelector('.modal-body').appendChild(errorDiv);

      confirmButton.disabled = false;
      confirmButton.innerHTML = '<i class="fas fa-trash"></i> Delete Employee';

      setTimeout(() => {
        if (errorDiv.parentNode) {
          errorDiv.remove();
        }
      }, 5000);
    });
  }
});

// Print employee card function
function printEmployeeCard() {
  const printWindow = window.open('', '_blank');
  printWindow.document.write(`
    <html>
      <head>
        <title>Employee Card - <%= employee.name %></title>
        <style>
          body {
            font-family: Arial, sans-serif;
            padding: 20px;
            margin: 0;
            background: white;
          }
          .employee-card {
            border: 2px solid #333;
            padding: 20px;
            width: 400px;
            background: white;
            border-radius: 8px;
          }
          .employee-header {
            text-align: center;
            margin-bottom: 20px;
            border-bottom: 1px solid #333;
            padding-bottom: 15px;
          }
          .employee-name {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 8px;
          }
          .employee-id {
            font-size: 18px;
            font-family: 'Courier New', monospace;
            color: #666;
          }
          .employee-details {
            font-size: 14px;
            line-height: 1.8;
          }
          .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
          }
          .detail-label {
            font-weight: bold;
            color: #333;
          }
          .detail-value {
            color: #666;
          }
        </style>
      </head>
      <body>
        <div class="employee-card">
          <div class="employee-header">
            <div class="employee-name"><%= employee.name %></div>
            <div class="employee-id"><%= employee.cep %></div>
          </div>
          <div class="employee-details">
            <div class="detail-row">
              <span class="detail-label">Email:</span>
              <span class="detail-value"><%= employee.email %></span>
            </div>
            <div class="detail-row">
              <span class="detail-label">Department:</span>
              <span class="detail-value"><%= employee.department_name || 'N/A' %></span>
            </div>
            <div class="detail-row">
              <span class="detail-label">Location:</span>
              <span class="detail-value"><%= employee.location_name || 'N/A' %></span>
            </div>
            <div class="detail-row">
              <span class="detail-label">Start Date:</span>
              <span class="detail-value"><%= new Date(employee.joined_date).toLocaleDateString() %></span>
            </div>
            <% if (employee.job_title) { %>
            <div class="detail-row">
              <span class="detail-label">Job Title:</span>
              <span class="detail-value"><%= employee.job_title %></span>
            </div>
            <% } %>
          </div>
        </div>
      </body>
    </html>
  `);
  printWindow.document.close();
  printWindow.print();
  printWindow.close();
}

// Generate asset report function
function generateAssetReport() {
  const params = new URLSearchParams();
  params.append('employee_id', '<%= employee.id %>');
  params.append('report_type', 'employee_assets');
  params.append('export_timestamp', new Date().toISOString());

  // Create hidden iframe for download
  const iframe = document.createElement('iframe');
  iframe.style.display = 'none';
  iframe.src = `/reports/employee-assets?${params.toString()}`;
  document.body.appendChild(iframe);

  setTimeout(() => {
    document.body.removeChild(iframe);
  }, 2000);
}
</script>

<style>
/* Employee Show Page Specific Styles */
.employee-meta {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-top: 0.5rem;
}

.employee-id-display {
  font-family: 'Courier New', monospace;
  background: #f8f9fa;
  padding: 0.25rem 0.75rem;
  border-radius: 6px;
  font-size: 0.9rem;
  font-weight: 600;
  color: #495057;
  border: 1px solid #e9ecef;
}

.employee-status {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.4rem 0.8rem;
  border-radius: 20px;
  font-size: 0.85rem;
  font-weight: 600;
}

.employee-status.status-active {
  background: #d4edda;
  color: #155724;
  border: 1px solid #c3e6cb;
}

.employee-status.status-inactive {
  background: #f8d7da;
  color: #721c24;
  border: 1px solid #f5c6cb;
}

/* Main Content Layout */
.employee-details-layout {
  display: grid;
  grid-template-columns: 1fr 350px;
  gap: 2rem;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem 2rem;
}

/* Software Assignments Styling */
.software-assignments-grid {
  display: grid;
  gap: 1rem;
}

.software-assignment-card {
  background: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 8px;
  padding: 1rem;
  transition: all 0.2s ease;
}

.software-assignment-card:hover {
  background: #fff;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.software-header {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 0.75rem;
}

.software-name {
  font-weight: 600;
  color: var(--primary);
  font-size: 1rem;
}

.version {
  background: #e9ecef;
  color: #495057;
  padding: 0.2rem 0.5rem;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: 600;
}

.software-details {
  display: flex;
  gap: 0.75rem;
  margin-bottom: 0.5rem;
  flex-wrap: wrap;
}

.vendor, .license-type {
  font-size: 0.8rem;
  padding: 0.2rem 0.5rem;
  border-radius: 4px;
  display: flex;
  align-items: center;
  gap: 0.3rem;
}

.vendor {
  background: #f8f9fa;
  color: #495057;
  border: 1px solid #e9ecef;
}

.license-type {
  background: #d1ecf1;
  color: #0c5460;
  border: 1px solid #bee5eb;
}

.assignment-date, .license-key {
  font-size: 0.8rem;
  color: #666;
  display: flex;
  align-items: center;
  gap: 0.3rem;
  margin-top: 0.5rem;
}

.key-value {
  font-family: 'Courier New', monospace;
  background: #f8f9fa;
  padding: 0.2rem 0.4rem;
  border-radius: 3px;
  font-weight: 600;
}

/* Assets Panel Styling */
.assets-panel {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.assets-section {
  background: white;
  border-radius: 12px;
  border: 1px solid #e9ecef;
  padding: 1.5rem;
}

.count-badge {
  background: var(--primary);
  color: white;
  padding: 0.2rem 0.6rem;
  border-radius: 12px;
  font-size: 0.75rem;
  font-weight: 600;
  margin-left: 0.5rem;
}

.assets-list {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.asset-item-card {
  background: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 8px;
  padding: 1rem;
  transition: all 0.2s ease;
}

.asset-item-card:hover {
  background: #fff;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transform: translateY(-1px);
}

.asset-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.75rem;
}

.asset-id-badge {
  background: var(--primary);
  color: white;
  padding: 0.3rem 0.6rem;
  border-radius: 6px;
  font-size: 0.8rem;
  font-weight: 600;
  font-family: 'Courier New', monospace;
}

.asset-name {
  margin: 0 0 0.5rem 0;
  font-size: 1rem;
  font-weight: 600;
}

.asset-name a {
  color: var(--primary);
  text-decoration: none;
}

.asset-name a:hover {
  text-decoration: underline;
}

.asset-details {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.5rem;
}

.asset-detail {
  display: flex;
  flex-direction: column;
  gap: 0.1rem;
}

.detail-label {
  font-size: 0.75rem;
  font-weight: 600;
  color: #666;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.detail-value {
  font-size: 0.85rem;
  color: #333;
  display: flex;
  align-items: center;
  gap: 0.3rem;
}

.assets-summary {
  margin-top: 1rem;
  padding-top: 1rem;
  border-top: 1px solid #f1f3f4;
}

.summary-stats {
  display: flex;
  gap: 2rem;
}

.stat-item {
  text-align: center;
}

.stat-number {
  display: block;
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--primary);
}

.stat-label {
  font-size: 0.8rem;
  color: #666;
  font-weight: 500;
}

/* Empty States */
.empty-state-inline, .unassigned-assets {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 2rem;
  background: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 8px;
  text-align: left;
}

.empty-icon, .unassigned-icon {
  width: 48px;
  height: 48px;
  background: #e9ecef;
  color: #6c757d;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.2rem;
  flex-shrink: 0;
}

.empty-text, .unassigned-text {
  flex: 1;
}

.empty-text h4, .unassigned-text h4 {
  margin: 0 0 0.25rem 0;
  font-size: 1rem;
  color: #333;
}

.empty-text p, .unassigned-text p {
  margin: 0;
  font-size: 0.85rem;
  color: #666;
}

/* Modal Styling */
.modal-assets-container {
  max-height: 300px;
  overflow-y: auto;
  margin: 1rem 0;
  border: 1px solid #e9ecef;
  border-radius: 6px;
  background: #f8f9fa;
}

.assets-preview {
  padding: 1rem;
}

.modal-asset-card {
  background: white;
  border: 1px solid #e9ecef;
  border-radius: 6px;
  padding: 0.75rem;
  margin-bottom: 0.5rem;
}

.modal-asset-card:last-child {
  margin-bottom: 0;
}

.modal-asset-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.modal-asset-id {
  background: var(--primary);
  color: white;
  padding: 0.2rem 0.5rem;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: 600;
  font-family: 'Courier New', monospace;
}

.modal-asset-name {
  font-weight: 600;
  color: #333;
}

.modal-asset-details {
  font-size: 0.8rem;
  color: #666;
}

.warning-message {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem;
  background: #fff3cd;
  border: 1px solid #ffeaa7;
  border-radius: 6px;
  color: #856404;
  font-weight: 500;
  margin-top: 1rem;
}

/* Responsive Design */
@media (max-width: 768px) {
  .employee-details-layout {
    grid-template-columns: 1fr;
    gap: 1.5rem;
    padding: 0 1rem 1rem;
  }

  .assets-panel {
    order: -1;
  }

  .employee-meta {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .asset-details {
    grid-template-columns: 1fr;
  }

  .summary-stats {
    justify-content: center;
  }

  .header-actions .action-buttons {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 0.5rem;
  }
}

@media (max-width: 480px) {
  .header-actions .action-buttons {
    grid-template-columns: 1fr;
  }

  .employee-details-layout {
    padding: 0 0.5rem 0.5rem;
  }

  .info-section, .assets-section {
    padding: 1rem;
  }

  .empty-state-inline, .unassigned-assets {
    flex-direction: column;
    text-align: center;
    gap: 0.75rem;
  }
}

/* Print Styles */
@media print {
  .header-actions,
  .quick-actions-section {
    display: none !important;
  }

  .employee-details-layout {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .info-section, .assets-section {
    border: 1px solid #333 !important;
    box-shadow: none !important;
  }

  .section-title {
    color: #333 !important;
  }

  .employee-status {
    border: 1px solid #333 !important;
    background: white !important;
    color: #333 !important;
  }
}

/* High Contrast Mode */
@media (prefers-contrast: high) {
  .employee-id-display,
  .asset-id-badge,
  .key-value {
    border: 2px solid #333;
  }

  .software-assignment-card,
  .asset-item-card {
    border: 2px solid #333;
  }
}
</style>
