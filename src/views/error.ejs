<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title || 'Error' %> - Inventory Manager</title>
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/tailwind.css">
  <style>
    /* Particle and portal animation styles (not easily replaced by Tailwind) */
    .floating-particles {
      position: absolute;
      width: 100%;
      height: 100%;
      overflow: hidden;
      z-index: 1;
    }
    .particle {
      position: absolute;
      width: 10px;
      height: 10px;
      background: #6366f1;
      opacity: 0.1;
      border-radius: 50%;
      animation: float 6s infinite linear;
    }
    .particle:nth-child(2n) {
      background: #f59e42;
      animation-duration: 8s;
    }
    .particle:nth-child(3n) {
      background: #38bdf8;
      animation-duration: 10s;
    }
    @keyframes float {
      0% { transform: translateY(100vh) rotate(0deg); opacity: 0; }
      10%,90% { opacity: 0.1; }
      100% { transform: translateY(-100px) rotate(360deg); opacity: 0; }
    }
    .rick-morty-portal {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 320px;
      height: 320px;
      background: radial-gradient(circle at 60% 40%, #00ff88 0%, #00cc66 50%, #009944 100%);
      border-radius: 50%;
      opacity: 0;
      z-index: 1000;
      pointer-events: none;
      box-shadow: 0 0 60px 20px #00ff8855, 0 0 120px 40px #00ff8888;
      transition: opacity 0.4s cubic-bezier(.4,2,.6,1), box-shadow 0.4s;
      display: none;
    }
    .rick-morty-portal.active {
      display: block;
      opacity: 1;
      animation: portalAppear 0.5s cubic-bezier(.4,2,.6,1) forwards, portalSpin 2.5s linear infinite;
      box-shadow: 0 0 100px 40px #00ff88cc, 0 0 200px 80px #00ff8866;
    }
    .portal-inner {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 85%;
      height: 85%;
      background: radial-gradient(circle, #66ff99 0%, #33ff77 60%, transparent 80%);
      border-radius: 50%;
      box-shadow: 0 0 60px 10px #66ff99aa;
      animation: portalPulse 1.2s ease-in-out infinite alternate;
      z-index: 1;
    }
    .portal-swirls {
      position: absolute;
      top: 50%; left: 50%;
      width: 90%; height: 90%;
      pointer-events: none;
      transform: translate(-50%, -50%);
      border-radius: 50%;
      z-index: 2;
      background: conic-gradient(
        from 0deg,
        #00ff88 0deg 60deg,
        #00cc66 60deg 120deg,
        #009944 120deg 180deg,
        #00ff88 180deg 240deg,
        #00cc66 240deg 300deg,
        #009944 300deg 360deg
      );
      opacity: 0.22;
      animation: swirlSpin 3s linear infinite;
      filter: blur(3px) brightness(1.2);
    }
    @keyframes swirlSpin {
      0% { transform: translate(-50%, -50%) rotate(0deg);}
      100% { transform: translate(-50%, -50%) rotate(360deg);}
    }
    .rick-message {
      position: fixed;
      top: 20%;
      left: 50%;
      transform: translateX(-50%) scale(0.95);
      background: #18181b;
      color: #00ff88;
      padding: 1.1rem 2.2rem;
      border-radius: 12px;
      font-family: 'Fira Mono', 'Courier New', monospace;
      font-weight: bold;
      border: 2.5px solid #00ff88;
      box-shadow: 0 0 32px 5px #00ff8877, 0 0 2px #00ff88;
      z-index: 1001;
      opacity: 0;
      display: none;
      max-width: 90vw;
      text-align: center;
      font-size: 1.1rem;
      letter-spacing: 0.01em;
      transition: opacity 0.3s, transform 0.3s;
    }
    .rick-message.active {
      display: block;
      opacity: 1;
      transform: translateX(-50%) scale(1.04);
      animation: messageAppear 0.6s cubic-bezier(.4,2,.6,1);
      box-shadow: 0 0 48px 10px #00ff88cc, 0 0 2px #00ff88;
    }
    @keyframes portalAppear {
      from { opacity: 0; transform: translate(-50%, -50%) scale(0.6);}
      to { opacity: 1; transform: translate(-50%, -50%) scale(1);}
    }
    @keyframes portalSpin {
      from { transform: translate(-50%, -50%) rotate(0deg);}
      to { transform: translate(-50%, -50%) rotate(360deg);}
    }
    @keyframes portalPulse {
      from { transform: translate(-50%, -50%) scale(0.9);}
      to { transform: translate(-50%, -50%) scale(1.08);}
    }
    @keyframes messageAppear {
      from { opacity: 0; transform: translateX(-50%) scale(0.92);}
      to { opacity: 1; transform: translateX(-50%) scale(1.04);}
    }
    @media (max-width: 768px) {
      .rick-morty-portal { width: 180px; height: 180px; }
      .rick-message { font-size: 0.95rem; padding: 0.7rem 1.1rem; }
    }
  </style>
</head>
<body class="min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center relative">
  <!-- Floating Particles Background -->
  <div class="floating-particles"></div>

  <!-- Error Container -->
  <div class="relative z-10 max-w-xl w-full mx-auto text-center bg-white dark:bg-gray-800 rounded-2xl shadow-2xl p-8 md:p-12 animate-fadeIn">
    <div id="errorIcon" class="mx-auto mb-6 text-5xl text-red-500 dark:text-yellow-400 animate-bounce cursor-pointer transition-transform hover:scale-110">
      <i class="fas fa-exclamation-triangle"></i>
    </div>
    <h1 class="text-6xl font-extrabold text-indigo-600 dark:text-indigo-400 mb-2"><%= locals.status || '404' %></h1>
    <h2 class="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white mb-4"><%= locals.title || 'Oops! Something went wrong' %></h2>
    <div class="mb-8">
      <p class="text-base md:text-lg text-gray-500 dark:text-gray-300"><%= locals.message || 'The page you are looking for might have been removed, had its name changed, or is temporarily unavailable.' %></p>
    </div>
    <% if (locals.user) { %>
      <div class="flex flex-wrap gap-3 justify-center mb-2">
        <a href="/" class="inline-flex items-center gap-2 px-6 py-2 rounded-lg bg-indigo-600 hover:bg-indigo-700 text-white font-semibold shadow transition">
          <i class="fas fa-home"></i> Go to Dashboard
        </a>
        <button onclick="history.back()" class="inline-flex items-center gap-2 px-6 py-2 rounded-lg bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-semibold shadow transition">
          <i class="fas fa-arrow-left"></i> Go Back
        </button>
        <button onclick="window.location.reload()" class="inline-flex items-center gap-2 px-6 py-2 rounded-lg bg-yellow-400 hover:bg-yellow-500 text-gray-900 font-semibold shadow transition">
          <i class="fas fa-redo"></i> Refresh Page
        </button>
      </div>
    <% } else { %>
      <div class="flex flex-wrap gap-3 justify-center mb-2">
        <a href="/auth/login" class="inline-flex items-center gap-2 px-6 py-2 rounded-lg bg-indigo-600 hover:bg-indigo-700 text-white font-semibold shadow transition">
          <i class="fas fa-sign-in-alt"></i> Login
        </a>
        <a href="/" class="inline-flex items-center gap-2 px-6 py-2 rounded-lg bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white font-semibold shadow transition">
          <i class="fas fa-home"></i> Home
        </a>
      </div>
    <% } %>
  </div>

  <!-- Rick and Morty Easter Egg -->
  <div class="rick-morty-portal" id="portal">
    <div class="portal-inner"></div>
    <div class="portal-swirls"></div>
  </div>
  <div class="rick-message" id="rickMessage">
    "Wubba lubba dub dub! Looks like you've glitched into another dimension, Morty!"
  </div>

  <script>
    // Create floating particles
    function createParticles() {
      const container = document.querySelector('.floating-particles');
      const particleCount = 20;
      for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.className = 'particle';
        particle.style.left = Math.random() * 100 + '%';
        particle.style.animationDelay = Math.random() * 6 + 's';
        particle.style.animationDuration = (Math.random() * 4 + 6) + 's';
        container.appendChild(particle);
      }
    }

    // Rick and Morty Easter Egg
    let clickCount = 0;
    const errorIcon = document.getElementById('errorIcon');
    const portal = document.getElementById('portal');
    const rickMessage = document.getElementById('rickMessage');
    const rickQuotes = [
      "Wubba lubba dub dub! Looks like you've glitched into another dimension, Morty!",
      "Oh great, another broken website. *burp* Way to go, Jerry!",
      "Listen Morty, this error is like... like existence, it's meaningless!",
      "404? More like 40-*burp*-4 ways this could have been avoided!",
      "Existence is pain, Morty! And so is this error page!",
      "I've seen better error handling in interdimensional cable!"
    ];
    errorIcon.addEventListener('click', () => {
      clickCount++;
      if (clickCount >= 5) {
        portal.classList.add('active');
        rickMessage.textContent = rickQuotes[Math.floor(Math.random() * rickQuotes.length)];
        rickMessage.classList.add('active');
        setTimeout(() => {
          portal.classList.remove('active');
          rickMessage.classList.remove('active');
          clickCount = 0;
        }, 4000);
      }
    });
    errorIcon.addEventListener('mouseenter', () => {
      errorIcon.style.animation = 'none';
      setTimeout(() => {
        errorIcon.style.animation = 'bounce 0.5s ease-out';
      }, 10);
    });
    document.addEventListener('DOMContentLoaded', () => {
      createParticles();
      setInterval(() => {
        if (Math.random() < 0.3) {
          const sparkle = document.createElement('div');
          sparkle.style.position = 'absolute';
          sparkle.style.left = Math.random() * 100 + '%';
          sparkle.style.top = Math.random() * 100 + '%';
          sparkle.style.width = '4px';
          sparkle.style.height = '4px';
          sparkle.style.background = '#f59e42';
          sparkle.style.borderRadius = '50%';
          sparkle.style.zIndex = '1';
          sparkle.style.animation = 'fadeInScale 0.5s ease-out forwards';
          document.querySelector('.floating-particles').appendChild(sparkle);
          setTimeout(() => { sparkle.remove(); }, 500);
        }
      }, 2000);
    });
    // Konami Code Easter Egg
    let konamiCode = [];
    const konamiSequence = [
      'ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown',
      'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight',
      'KeyB', 'KeyA'
    ];
    document.addEventListener('keydown', (e) => {
      konamiCode.push(e.code);
      if (konamiCode.length > konamiSequence.length) konamiCode.shift();
      if (konamiCode.join(',') === konamiSequence.join(',')) {
        document.body.style.animation = 'portalSpin 1s ease-in-out';
        rickMessage.textContent = "🎮 Konami Code activated! *burp* You're a real gamer, Morty!";
        rickMessage.classList.add('active');
        portal.classList.add('active');
        setTimeout(() => {
          document.body.style.animation = '';
          rickMessage.classList.remove('active');
          portal.classList.remove('active');
          konamiCode = [];
        }, 3000);
      }
    });
  </script>
</body>
</html>
