<div class="page-container">
  <div class="page-header-simple">
    <h1>Edit Asset</h1>
    <div class="header-actions">
      <div class="action-buttons">
        <a href="/items/<%= item.id %>/<%= item.cep_brc %>" class="btn btn-secondary">
          <i class="fas fa-arrow-left"></i> Back to Asset
        </a>
        <a href="/items/<%= item.id %>/<%= item.cep_brc %>/history" class="btn btn-info">
          <i class="fas fa-history"></i> View History
        </a>
      </div>
    </div>
  </div>

  <div class="content-section">
    <div class="form-container">
      <% if (typeof errors !== 'undefined' && errors.length > 0) { %>
        <div class="alert alert-danger">
          <i class="fas fa-exclamation-triangle"></i>
          <div>
            <strong>Please fix the following errors:</strong>
            <ul>
              <% errors.forEach(error => { %>
                <li><%= error %></li>
              <% }) %>
            </ul>
          </div>
        </div>
      <% } %>

      <form method="POST" action="/items/<%= item.id %>/<%= item.cep_brc %>" id="editItemForm" class="modern-form">
        <!-- Asset Identification Section -->
        <div class="form-section">
          <div class="section-header">
            <i class="fas fa-tag section-icon"></i>
            <h3>Asset Identification</h3>
          </div>

          <div class="form-grid">
            <div class="form-group full-width">
              <label for="cep_brc" class="required">Asset ID (CEP/BRC)</label>
              <div class="input-with-validation">
                <% if (user && user.role === 'admin') { %>
                  <input type="text" id="cep_brc" name="cep_brc" value="<%= item.cep_brc %>"
                    class="form-input admin-editable" data-original="<%= item.cep_brc %>" required>
                  <div class="validation-feedback" id="cepValidation"></div>
                  <small class="field-help admin-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    Warning: Changing Asset ID may affect system relationships. Admin only.
                  </small>
                <% } else { %>
                  <input type="text" id="cep_brc" value="<%= item.cep_brc %>" class="form-input" disabled>
                  <small class="field-help">Asset ID cannot be changed (admin only)</small>
                  <input type="hidden" name="cep_brc" value="<%= item.cep_brc %>">
                <% } %>
              </div>
            </div>

            <div class="form-group full-width">
              <label for="name" class="required">Asset Name</label>
              <input type="text" id="name" name="name" value="<%= item.name %>" class="form-input" required
                placeholder="Enter descriptive name for this asset">
            </div>

            <div class="form-group full-width">
              <label for="description"><%= t("items.description") %></label>
              <textarea id="description" name="description" class="form-textarea" rows="3"
                placeholder="Enter detailed description of the asset (optional)"><%= item.description || '' %></textarea>
              <small class="field-help">
                <i class="fas fa-info-circle"></i>
                Provide additional details about the asset, its purpose, or any special characteristics
              </small>
            </div>

            <div class="form-group">
              <label for="type_id" class="required">Asset Type</label>
              <select id="type_id" name="type_id" class="form-select" required>
                <option value="">Select Asset Type</option>
                <% types.forEach(type => { %>
                  <option value="<%= type.id %>" <%= item.type_id == type.id ? 'selected' : '' %>>
                    <%= type.name %>
                  </option>
                <% }) %>
              </select>
            </div>
          </div>
        </div>

        <!-- Product Details Section -->
        <div class="form-section">
          <div class="section-header">
            <i class="fas fa-cog section-icon"></i>
            <h3>Product Details</h3>
          </div>

          <div class="form-grid">
            <div class="form-group">
              <label for="brand_id"><%= t("items.brand") %></label>
              <select id="brand_id" name="brand_id" class="form-select">
                <option value="">Select Brand</option>
                <% brands.forEach(brand => { %>
                  <option value="<%= brand.id %>" <%= item.brand_id == brand.id ? 'selected' : '' %>>
                    <%= brand.name %>
                  </option>
                <% }) %>
              </select>
            </div>

            <div class="form-group">
              <label for="model"><%= t("items.model") %></label>
              <input type="text" id="model" name="model" value="<%= item.model || '' %>" class="form-input"
                placeholder="Product model number">
            </div>

            <div class="form-group">
              <label for="serial_cod"><%= t("items.serial_number") %></label>
              <input type="text" id="serial_cod" name="serial_cod" value="<%= item.serial_cod || '' %>" class="form-input"
                placeholder="Unique serial number">
            </div>

            <div class="form-group">
              <label for="price">Purchase Price (€)</label>
              <div class="input-group">
                <span class="input-group-text">€</span>
                <input type="number" id="price" name="price" min="0" step="0.01" value="<%= item.price || '' %>"
                  class="form-input" placeholder="0.00">
              </div>
            </div>
          </div>
        </div>

        <!-- Purchase Information Section -->
        <div class="form-section">
          <div class="section-header">
            <i class="fas fa-receipt section-icon"></i>
            <h3>Purchase Information</h3>
          </div>

          <div class="form-grid">
            <div class="form-group full-width">
              <label for="receipt">Purchase Receipt</label>
              <select id="receipt" name="receipt" class="form-select">
                <option value="">Select Receipt (Optional)</option>
                <% sales.forEach(sale => { %>
                  <option value="<%= sale.receipt %>" <%= item.receipt === sale.receipt ? 'selected' : '' %>>
                    <%= sale.receipt %> - <%= sale.supplier %> (<%= new Date(sale.date_acquired).toLocaleDateString() %>)
                  </option>
                <% }) %>
              </select>
            </div>
          </div>
        </div>

        <!-- Assignment Section -->
        <div class="form-section">
          <div class="section-header">
            <i class="fas fa-user section-icon"></i>
            <h3>Asset Assignment</h3>
          </div>

          <div class="form-grid">
            <div class="form-group">
              <label for="assigned_to">Assigned To</label>
              <select id="assigned_to" name="assigned_to" class="form-select">
                <option value="">Unassigned</option>
                <% employees.forEach(employee => { %>
                  <option value="<%= employee.id %>" <%= item.assigned_to == employee.id ? 'selected' : '' %>>
                    <%= employee.name %> (<%= employee.cep %>)
                  </option>
                <% }) %>
              </select>
            </div>

            <div class="form-group">
              <label for="date_assigned">Date Assigned</label>
              <input type="date" id="date_assigned" name="date_assigned" class="form-input"
                value="<%= item.date_assigned ? new Date(item.date_assigned).toISOString().split('T')[0] : '' %>">
            </div>
          </div>
        </div>

        <!-- Form Actions -->
        <div class="form-actions">
          <button type="submit" class="btn btn-primary btn-lg">
            <i class="fas fa-save"></i> Update Asset
          </button>
          <a href="/items/<%= item.id %>/<%= item.cep_brc %>" class="btn btn-secondary btn-lg">
            <i class="fas fa-times"></i> Cancel
          </a>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- ID Change Confirmation Modal -->
<div class="modal-overlay" id="idChangeModal">
  <div class="modal-content warning-modal">
    <div class="modal-header">
      <i class="fas fa-exclamation-triangle modal-icon warning"></i>
      <h4>Confirm Asset ID Change</h4>
    </div>
    <div class="modal-body">
      <p>You are about to change the Asset ID (CEP/BRC). This is a critical identifier that may affect:</p>
      <ul class="warning-list">
        <li>System relationships and references</li>
        <li>Historical records and tracking</li>
        <li>Integration with external systems</li>
      </ul>
      <div class="id-change-preview">
        <strong>Current ID:</strong> <span id="currentIdDisplay"><%= item.cep_brc %></span><br>
        <strong>New ID:</strong> <span id="newIdDisplay"></span>
      </div>
    </div>
    <div class="modal-actions">
      <button id="confirmIdChange" class="btn btn-danger">
        <i class="fas fa-check"></i> Confirm Change
      </button>
      <button id="cancelIdChange" class="btn btn-secondary">
        <i class="fas fa-times"></i> Cancel
      </button>
    </div>
  </div>
</div>

<!-- Duplicate ID Warning Modal -->
<div class="modal-overlay" id="duplicateIdModal">
  <div class="modal-content error-modal">
    <div class="modal-header">
      <i class="fas fa-exclamation-circle modal-icon error"></i>
      <h4>Duplicate Asset ID Detected</h4>
    </div>
    <div class="modal-body">
      <p>This Asset ID is already in use by another asset:</p>
      <div class="duplicate-asset-info" id="duplicateAssetInfo">
        <!-- Dynamic content -->
      </div>
      <p>Please choose a different Asset ID or review the existing asset.</p>
    </div>
    <div class="modal-actions">
      <button id="viewDuplicateAsset" class="btn btn-info">
        <i class="fas fa-eye"></i> View Existing Asset
      </button>
      <button id="closeDuplicateModal" class="btn btn-secondary">
        <i class="fas fa-times"></i> Close
      </button>
    </div>
  </div>
</div>

<style>
/* Additional styles for textarea */
.form-textarea {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid #ced4da;
  border-radius: 0.375rem;
  font-size: 1rem;
  line-height: 1.5;
  resize: vertical;
  min-height: 80px;
  font-family: inherit;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.form-textarea:focus {
  border-color: #80bdff;
  outline: 0;
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.form-textarea::placeholder {
  color: #6c757d;
  opacity: 1;
}

.admin-warning {
  color: #856404 !important;
  background-color: #fff3cd;
  border: 1px solid #ffeaa7;
  padding: 0.375rem 0.75rem;
  border-radius: 0.25rem;
  font-size: 0.875rem;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('editItemForm');
  const idInput = document.getElementById('cep_brc');
  const idChangeModal = document.getElementById('idChangeModal');
  const duplicateIdModal = document.getElementById('duplicateIdModal');
  const cepValidation = document.getElementById('cepValidation');

  let originalId = '<%= item.cep_brc %>';
  let duplicateCheckTimeout;
  let duplicateAssetData = null;

  // Asset ID validation and duplicate checking
  if (idInput && idInput.classList.contains('admin-editable')) {
    idInput.addEventListener('input', function() {
      const newValue = this.value.trim();

      // Clear previous timeout
      clearTimeout(duplicateCheckTimeout);

      // Reset validation state
      cepValidation.className = 'validation-feedback';
      cepValidation.innerHTML = '';

      if (newValue === originalId) {
        cepValidation.className = 'validation-feedback success';
        cepValidation.innerHTML = '<i class="fas fa-check"></i> Current Asset ID';
        return;
      }

      if (newValue.length < 3) {
        cepValidation.className = 'validation-feedback warning';
        cepValidation.innerHTML = '<i class="fas fa-info-circle"></i> Asset ID should be at least 3 characters';
        return;
      }

      // Show checking state
      cepValidation.className = 'validation-feedback checking';
      cepValidation.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Checking availability...';

      // Check for duplicates after delay
      duplicateCheckTimeout = setTimeout(() => {
        checkDuplicateAssetId(newValue);
      }, 800);
    });
  }

  // Check for duplicate Asset ID
  async function checkDuplicateAssetId(assetId) {
    try {
      const response = await fetch(`/api/items/check-duplicate/${encodeURIComponent(assetId)}`);
      const data = await response.json();

      if (data.exists) {
        duplicateAssetData = data.asset;
        cepValidation.className = 'validation-feedback error';
        cepValidation.innerHTML = `
          <i class="fas fa-exclamation-triangle"></i>
          Asset ID already exists -
          <a href="#" onclick="showDuplicateModal()" class="error-link">View existing asset</a>
        `;
      } else {
        cepValidation.className = 'validation-feedback success';
        cepValidation.innerHTML = '<i class="fas fa-check"></i> Asset ID available';
      }
    } catch (error) {
      console.error('Error checking duplicate:', error);
      cepValidation.className = 'validation-feedback error';
      cepValidation.innerHTML = '<i class="fas fa-exclamation-circle"></i> Error checking availability';
    }
  }

  // Show duplicate asset modal
  window.showDuplicateModal = function() {
    if (duplicateAssetData) {
      const duplicateInfo = document.getElementById('duplicateAssetInfo');
      duplicateInfo.innerHTML = `
        <div class="asset-card">
          <div class="asset-header">
            <span class="entity-id">${duplicateAssetData.cep_brc}</span>
            <span class="entity-name">${duplicateAssetData.name}</span>
          </div>
          <div class="asset-details">
            <div><strong>Type:</strong> ${duplicateAssetData.type_name || 'N/A'}</div>
            <div><strong>Brand:</strong> ${duplicateAssetData.brand_name || 'N/A'}</div>
            <div><strong>Status:</strong> ${duplicateAssetData.assigned_to_name ? 'Assigned to ' + duplicateAssetData.assigned_to_name : 'Unassigned'}</div>
          </div>
        </div>
      `;

      document.getElementById('viewDuplicateAsset').onclick = function() {
        window.open(`/items/${duplicateAssetData.id}/${duplicateAssetData.cep_brc}`, '_blank');
      };

      duplicateIdModal.style.display = 'flex';
    }
  };

  // Form submission handling
  form.addEventListener('submit', function(event) {
    // Check for validation errors
    if (cepValidation && cepValidation.classList.contains('error')) {
      event.preventDefault();
      showDuplicateModal();
      return;
    }

    // If ID was changed, show confirmation modal
    if (idInput && idInput.classList.contains('admin-editable') && idInput.value !== originalId) {
      event.preventDefault();
      document.getElementById('newIdDisplay').textContent = idInput.value;
      idChangeModal.style.display = 'flex';
    }
  });

  // Modal event handlers
  document.getElementById('confirmIdChange')?.addEventListener('click', function() {
    idChangeModal.style.display = 'none';
    form.submit();
  });

  document.getElementById('cancelIdChange')?.addEventListener('click', function() {
    idChangeModal.style.display = 'none';
    if (idInput) {
      idInput.value = originalId;
      if (cepValidation) {
        cepValidation.className = 'validation-feedback success';
        cepValidation.innerHTML = '<i class="fas fa-check"></i> Current Asset ID';
      }
    }
  });

  document.getElementById('closeDuplicateModal')?.addEventListener('click', function() {
    duplicateIdModal.style.display = 'none';
  });

  // Close modals when clicking overlay
  [idChangeModal, duplicateIdModal].forEach(modal => {
    modal?.addEventListener('click', function(e) {
      if (e.target === modal) {
        modal.style.display = 'none';
      }
    });
  });

  // Assignment date auto-fill
  const assignedToSelect = document.getElementById('assigned_to');
  const dateAssignedInput = document.getElementById('date_assigned');

  assignedToSelect.addEventListener('change', function() {
    if (this.value && !dateAssignedInput.value) {
      dateAssignedInput.value = new Date().toISOString().split('T')[0];
    }
  });
});
</script>
