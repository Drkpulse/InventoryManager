<h1>Edit Item</h1>

<% if (typeof errors !== 'undefined' && errors.length > 0) { %>
  <div class="alert alert-danger">
    <ul>
      <% errors.forEach(error => { %>
        <li><%= error %></li>
      <% }) %>
    </ul>
  </div>
<% } %>

<form method="POST" action="/items/<%= item.id %>/<%= item.cep_brc %>" id="editItemForm">
  <div class="form-section">
    <h3>Basic Information</h3>

    <div class="form-group">
      <label for="cep_brc">Item ID (CEP/BRC)</label>
      <% if (user && user.role === 'admin') { %>
        <input type="text" id="cep_brc" name="cep_brc" value="<%= item.cep_brc %>"
          class="admin-editable" data-original="<%= item.cep_brc %>" required>
        <small class="warning-text">Warning: Changing Item ID may affect relationships. Admin only.</small>
      <% } else { %>
        <input type="text" id="cep_brc" value="<%= item.cep_brc %>" disabled>
        <small>Item ID cannot be changed (admin only)</small>
        <input type="hidden" name="cep_brc" value="<%= item.cep_brc %>">
      <% } %>
    </div>

    <div class="form-group">
      <label for="name">Name</label>
      <input type="text" id="name" name="name" value="<%= item.name %>" required>
    </div>

    <div class="form-group">
      <label for="type_id">Type</label>
      <select id="type_id" name="type_id" required>
        <option value="">Select Type</option>
        <% types.forEach(type => { %>
          <option value="<%= type.id %>" <%= item.type_id == type.id ? 'selected' : '' %>>
            <%= type.name %>
          </option>
        <% }) %>
      </select>
    </div>
  </div>

  <div class="form-section">
    <h3>Product Details</h3>

    <div class="form-group">
      <label for="brand_id">Brand</label>
      <select id="brand_id" name="brand_id">
        <option value="">Select Brand</option>
        <% brands.forEach(brand => { %>
          <option value="<%= brand.id %>" <%= item.brand_id == brand.id ? 'selected' : '' %>>
            <%= brand.name %>
          </option>
        <% }) %>
      </select>
    </div>

    <div class="form-group">
      <label for="model">Model</label>
      <input type="text" id="model" name="model" value="<%= item.model || '' %>">
    </div>

    <div class="form-group">
      <label for="serial_cod">Serial Number</label>
      <input type="text" id="serial_cod" name="serial_cod" value="<%= item.serial_cod || '' %>">
    </div>

    <div class="form-group">
      <label for="price">Price</label>
      <input type="number" id="price" name="price" min="0" step="0.01" value="<%= item.price || '' %>">
    </div>
  </div>

  <div class="form-section">
    <h3>Purchase Information</h3>

    <div class="form-group">
      <label for="receipt">Receipt</label>
      <select id="receipt" name="receipt">
        <option value="">Select Receipt</option>
        <% sales.forEach(sale => { %>
          <option value="<%= sale.receipt %>" <%= item.receipt === sale.receipt ? 'selected' : '' %>>
            <%= sale.receipt %> - <%= sale.supplier %> (<%= new Date(sale.date_acquired).toLocaleDateString() %>)
          </option>
        <% }) %>
      </select>
    </div>
  </div>

  <div class="form-section">
    <h3>Assignment</h3>

    <div class="form-group">
      <label for="assigned_to">Assigned To</label>
      <select id="assigned_to" name="assigned_to">
        <option value="">Unassigned</option>
        <% employees.forEach(employee => { %>
          <option value="<%= employee.id %>" <%= item.assigned_to == employee.id ? 'selected' : '' %>>
            <%= employee.name %> (<%= employee.cep %>)
          </option>
        <% }) %>
      </select>
    </div>

    <div class="form-group">
      <label for="date_assigned">Date Assigned</label>
      <input type="date" id="date_assigned" name="date_assigned"
        value="<%= item.date_assigned ? new Date(item.date_assigned).toISOString().split('T')[0] : '' %>">
    </div>
  </div>

  <div class="form-group">
    <button type="submit" class="btn">Update Item</button>
    <a href="/items/<%= item.id %>/<%= item.cep_brc %>" class="btn">Cancel</a>
  </div>
</form>

<!-- Add modal for ID change warning -->
<div class="modal" id="idChangeModal">
  <div class="modal-content">
    <h4>Warning: Changing Item ID</h4>
    <p>You are about to change the Item ID (CEP/BRC). This is a critical identifier and changing it may impact system integrity.</p>
    <p>New ID: <span id="newIdDisplay"></span></p>
    <div class="modal-actions">
      <button id="confirmIdChange" class="btn">Confirm Change</button>
      <button id="cancelIdChange" class="btn">Cancel</button>
    </div>
  </div>
</div>

<style>
  .form-section {
    margin-bottom: 2rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #eee;
  }

  .form-section h3 {
    margin-bottom: 1rem;
    color: var(--secondary);
  }

  .form-section:last-of-type {
    border-bottom: none;
  }

  small {
    color: #666;
    display: block;
    margin-top: 0.25rem;
  }

  /* New styles for admin editable field */
  .admin-editable {
    border: 2px solid #ffcc00;
    background-color: #fffbeb;
  }

  .warning-text {
    color: #cc3300;
    font-weight: bold;
  }

  /* Modal styles */
  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
  }

  .modal-content {
    background-color: #fff;
    margin: 15% auto;
    padding: 2rem;
    border-radius: 8px;
    width: 80%;
    max-width: 500px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
  }

  .modal-actions {
    margin-top: 1.5rem;
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
  }
</style>

<script>
  // Add client-side validation for ID changes
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('editItemForm');
    const idInput = document.getElementById('cep_brc');
    const modal = document.getElementById('idChangeModal');
    const newIdDisplay = document.getElementById('newIdDisplay');
    const confirmBtn = document.getElementById('confirmIdChange');
    const cancelBtn = document.getElementById('cancelIdChange');

    // Only setup the handlers if we have an admin-editable input
    if (idInput && idInput.classList.contains('admin-editable')) {
      let originalId = idInput.dataset.original;

      form.addEventListener('submit', function(event) {
        // If ID was changed, show confirmation modal
        if (idInput.value !== originalId) {
          event.preventDefault();
          newIdDisplay.textContent = idInput.value;
          modal.style.display = 'block';
        }
      });

      // Handle confirmation
      confirmBtn.addEventListener('click', function() {
        modal.style.display = 'none';
        form.submit();
      });

      // Handle cancellation
      cancelBtn.addEventListener('click', function() {
        modal.style.display = 'none';
        idInput.value = originalId; // Reset to original value
      });
    }
  });
</script>
