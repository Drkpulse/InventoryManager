<div class="container mx-auto px-4 py-8">
  <!-- Page Header -->
  <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8">
    <div>
      <h1 class="text-2xl font-bold text-gray-800 dark:text-gray-100 mb-2 flex items-center gap-2">
        <i class="fas fa-boxes"></i> <%= t('assets_management') %>
      </h1>
    </div>
    <div class="flex flex-wrap gap-3 mt-4 md:mt-0">
      <a href="/items/new" class="group px-4 py-2 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold rounded-lg transition-all duration-300 hover:scale-105 hover:shadow-lg">
        <i class="fas fa-plus mr-2 group-hover:scale-110 transition-transform duration-300"></i> <%= t('add_new_item') %>
      </a>
      <a href="/items/bulk-create" class="group px-4 py-2 bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white font-semibold rounded-lg transition-all duration-300 hover:scale-105 hover:shadow-lg" style="background: linear-gradient(to right, rgb(249, 115, 22), rgb(234, 88, 12)); color: white;">
        <i class="fas fa-layer-group mr-2 group-hover:scale-110 transition-transform duration-300"></i> Bulk Create Assets
      </a>
      <a href="/items/new-receipt" class="group px-4 py-2 bg-gradient-to-r from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white font-semibold rounded-lg transition-all duration-300 hover:scale-105 hover:shadow-lg">
        <i class="fas fa-receipt mr-2 group-hover:rotate-12 transition-transform duration-300"></i> <%= t('add_new_receipt') %>
      </a>
      <button id="exportItemsBtn" type="button" class="group px-4 py-2 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-semibold rounded-lg transition-all duration-300 hover:scale-105 hover:shadow-lg">
        <i class="fas fa-download mr-2 group-hover:translate-y-1 transition-transform duration-300"></i> <%= t('export_asset_list') %>
      </button>
    </div>
  </div>

  <!-- Advanced Filters Panel -->
  <div class="mb-6 bg-gray-50 dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg shadow">
    <div class="flex items-center justify-between px-6 py-4 cursor-pointer select-none" id="filtersToggle">
      <div class="flex items-center gap-2">
        <i class="fas fa-filter"></i>
        <h3 class="font-semibold text-gray-700 dark:text-gray-200"><%= t('advanced_filters') %></h3>
        <span class="ml-2 inline-flex items-center justify-center w-6 h-6 rounded-full bg-blue-600 text-white text-xs font-bold" id="filterBadge">0</span>
      </div>
      <div class="flex items-center gap-2">
        <span class="text-sm text-gray-500 dark:text-gray-400" id="appliedFiltersPreview"><%= t('no_filters_applied') %></span>
        <i class="fas fa-chevron-down toggle-icon"></i>
      </div>
    </div>
    <div class="px-6 py-4 border-t border-gray-200 dark:border-gray-700 hidden" id="filtersContent">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-4">
        <div>
          <label for="typeFilter" class="block text-xs font-semibold text-gray-700 dark:text-gray-300 mb-1"><%= t('asset_type') %></label>
          <select id="typeFilter" name="type"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
            <option value=""><%= t('all_types') %></option>
            <% if (typeof types !== 'undefined') { %>
              <% types.forEach(type => { %>
                <option value="<%= type.id %>" <%= (typeof req !== 'undefined' && req.query && req.query.type == type.id) ? 'selected' : '' %>>
                  <%= type.name %>
                </option>
              <% }) %>
            <% } %>
          </select>
        </div>
        <div>
          <label for="brandFilter" class="block text-xs font-semibold text-gray-700 dark:text-gray-300 mb-1"><%= t('brand') %></label>
          <select id="brandFilter" name="brand"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
            <option value=""><%= t('all_brands') %></option>
            <% if (typeof brands !== 'undefined') { %>
              <% brands.forEach(brand => { %>
                <option value="<%= brand.id %>" <%= (typeof req !== 'undefined' && req.query && req.query.brand == brand.id) ? 'selected' : '' %>>
                  <%= brand.name %>
                </option>
              <% }) %>
            <% } %>
          </select>
        </div>
        <div>
          <label for="statusFilter" class="block text-xs font-semibold text-gray-700 dark:text-gray-300 mb-1"><%= t('status') %></label>
          <select id="statusFilter" name="status"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
            <option value=""><%= t('all_statuses') %></option>
            <% if (statuses && statuses.length > 0) { %>
              <% statuses.forEach(status => { %>
                <option value="<%= status.id %>" <%= req.query.status == status.id ? 'selected' : '' %>>
                  <%= status.name %>
                </option>
              <% }); %>
            <% } %>
          </select>
        </div>
        <div>
          <label class="block text-xs font-semibold text-gray-700 dark:text-gray-300 mb-1"><%= t('price_range') %></label>
          <div class="flex gap-2">
            <input type="number" id="minPrice" name="minPrice" placeholder="Min €" min="0" step="0.01" value="<%= typeof req !== 'undefined' && req.query && req.query.minPrice ? req.query.minPrice : '' %>"
              class="w-1/2 px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
            <span class="self-center text-gray-500 dark:text-gray-400">to</span>
            <input type="number" id="maxPrice" name="maxPrice" placeholder="Max €" min="0" step="0.01" value="<%= typeof req !== 'undefined' && req.query && req.query.maxPrice ? req.query.maxPrice : '' %>"
              class="w-1/2 px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
          </div>
        </div>
        <div>
          <label class="block text-xs font-semibold text-gray-700 dark:text-gray-300 mb-1"><%= t('date_acquired') %></label>
          <div class="flex gap-2">
            <input type="date" id="startDate" name="startDate" value="<%= typeof req !== 'undefined' && req.query && req.query.startDate ? req.query.startDate : '' %>"
              class="w-1/2 px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
            <span class="self-center text-gray-500 dark:text-gray-400">to</span>
            <input type="date" id="endDate" name="endDate" value="<%= typeof req !== 'undefined' && req.query && req.query.endDate ? req.query.endDate : '' %>"
              class="w-1/2 px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
          </div>
        </div>
        <div>
          <label for="departmentFilter" class="block text-xs font-semibold text-gray-700 dark:text-gray-300 mb-1"><%= t('department') %></label>
          <select id="departmentFilter" name="department"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
            <option value=""><%= t('all_departments') %></option>
            <% if (typeof departments !== 'undefined') { %>
              <% departments.forEach(dept => { %>
                <option value="<%= dept.id %>" <%= (typeof req !== 'undefined' && req.query && req.query.department == dept.id) ? 'selected' : '' %>>
                  <%= dept.name %>
                </option>
              <% }) %>
            <% } %>
          </select>
        </div>
      </div>
      <div class="flex flex-wrap items-center justify-between gap-4">
        <div class="flex flex-wrap gap-2 text-xs" id="appliedFilters"></div>
        <div class="flex gap-2">
          <button type="button" id="applyFilters" class="group px-4 py-2 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold rounded-lg transition-all duration-300 flex items-center gap-2 hover:scale-105 hover:shadow-lg">
            <i class="fas fa-search group-hover:scale-110 transition-transform duration-300"></i> <%= t('apply_filters') %>
          </button>
          <button type="button" id="resetFilters" class="group px-4 py-2 bg-gradient-to-r from-gray-400 to-gray-600 hover:from-gray-500 hover:to-gray-700 text-white font-semibold rounded-lg transition-all duration-300 flex items-center gap-2 hover:scale-105 hover:shadow-lg">
            <i class="fas fa-times group-hover:-rotate-12 transition-transform duration-300"></i> <%= t('reset_all') %>
          </button>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Simple filter toggle functionality
    document.addEventListener('DOMContentLoaded', function() {
      const filtersToggle = document.getElementById('filtersToggle');
      const filtersContent = document.getElementById('filtersContent');
      const toggleIcon = filtersToggle.querySelector('.toggle-icon');

      filtersToggle.addEventListener('click', function() {
        filtersContent.classList.toggle('hidden');
        toggleIcon.classList.toggle('fa-chevron-down');
        toggleIcon.classList.toggle('fa-chevron-up');
      });

      // Show filters if any are applied
      const urlParams = new URLSearchParams(window.location.search);
      const hasFilters = urlParams.get('type') || urlParams.get('brand') || urlParams.get('status') ||
                        urlParams.get('department') || urlParams.get('q') || urlParams.get('minPrice') ||
                        urlParams.get('maxPrice') || urlParams.get('startDate') || urlParams.get('endDate');
      if (hasFilters) {
        filtersContent.classList.remove('hidden');
        toggleIcon.classList.remove('fa-chevron-down');
        toggleIcon.classList.add('fa-chevron-up');
      }
    });
  </script>

  <!-- Search Bar -->
  <div class="mb-6 bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700 p-4">
    <div class="flex items-center gap-3 mb-2">
      <div class="w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center">
        <i class="fas fa-search text-blue-600 dark:text-blue-300"></i>
      </div>
      <div>
        <label class="block font-semibold text-gray-700 dark:text-gray-200">Search Assets</label>
        <p class="text-xs text-gray-500 dark:text-gray-400">Find assets by ID, name, or assigned employee</p>
      </div>
    </div>
    <div class="relative">
      <input type="text" id="itemSearch" placeholder="Search by Asset ID, Name, or Assigned Employee..." autocomplete="off"
        class="w-full px-4 py-2 pl-10 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition">
      <i class="fas fa-search absolute left-3 top-1/2 -translate-y-1/2 text-blue-500 dark:text-blue-400"></i>
    </div>
  </div>

  <!-- Table Container that will be updated via AJAX -->
  <div id="tableContainer">
    <%- include('_table') %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Search functionality - client-side filtering
  let searchTimeout;
  const searchInput = document.getElementById('itemSearch');

  if (searchInput) {
    searchInput.addEventListener('input', function(e) {
      clearTimeout(searchTimeout);
      const query = e.target.value.trim().toLowerCase();

      searchTimeout = setTimeout(() => {
        const tableBody = document.querySelector('#itemsTableContainer tbody');
        if (tableBody) {
          const rows = tableBody.querySelectorAll('tr');

          rows.forEach(row => {
            if (query === '' || row.textContent.toLowerCase().includes(query)) {
              row.style.display = '';
            } else {
              row.style.display = 'none';
            }
          });
        }
      }, 300);
    });
  }

  // Filter toggle functionality
  const filtersToggle = document.getElementById('filtersToggle');
  const filtersContent = document.getElementById('filtersContent');
  const toggleIcon = filtersToggle?.querySelector('.toggle-icon');

  if (filtersToggle && filtersContent) {
    filtersToggle.addEventListener('click', function() {
      const isVisible = !filtersContent.classList.contains('hidden');

      if (isVisible) {
        filtersContent.classList.add('hidden');
        toggleIcon?.classList.remove('fa-chevron-up');
        toggleIcon?.classList.add('fa-chevron-down');
      } else {
        filtersContent.classList.remove('hidden');
        toggleIcon?.classList.remove('fa-chevron-down');
        toggleIcon?.classList.add('fa-chevron-up');
      }
    });
  }

  // Apply filters button - redirect with query parameters
  const applyFiltersBtn = document.getElementById('applyFilters');
  if (applyFiltersBtn) {
    applyFiltersBtn.addEventListener('click', function() {
      const params = new URLSearchParams();

      // Get all filter values
      const typeFilter = document.getElementById('typeFilter');
      const brandFilter = document.getElementById('brandFilter');
      const statusFilter = document.getElementById('statusFilter');
      const departmentFilter = document.getElementById('departmentFilter');

      if (typeFilter && typeFilter.value) params.append('type', typeFilter.value);
      if (brandFilter && brandFilter.value) params.append('brand', brandFilter.value);
      if (statusFilter && statusFilter.value) params.append('status', statusFilter.value);
      if (departmentFilter && departmentFilter.value) params.append('department', departmentFilter.value);

      // Redirect to items page with filters
      const url = params.toString() ? `/items?${params.toString()}` : '/items';
      window.location.href = url;
    });
  }

  // Reset filters button
  const resetFiltersBtn = document.getElementById('resetFilters');
  if (resetFiltersBtn) {
    resetFiltersBtn.addEventListener('click', function() {
      window.location.href = '/items';
    });
  }
});
</script>
