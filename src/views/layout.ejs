<!DOCTYPE html>
<html lang="en" class="h-full">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> | IT Asset Manager</title>

  <!-- Favicon -->
  <link rel="icon" type="image/x-icon" href="/favicon.ico">
  <link rel="shortcut icon" href="/favicon.ico">
  <link rel="apple-touch-icon" href="/favicon.ico">

  <!-- Cloudflare Optimization Control -->
  <meta name="cf-auto-minify" content="false">
  <meta name="cf-rocket-loader" content="false">

  <!-- Disable automatic Cloudflare optimizations that inject scripts -->
  <%- locals.cloudflareMetaTags || '' %>

  <!-- CSRF Protection -->
  <%- include('partials/csrf-protection') %>

  <!-- Immediate Dark Mode Script - Prevents flicker -->
  <script>
    (function() {
      // Get theme preference immediately
      const serverTheme = '<%= user && user.settings && user.settings.theme ? user.settings.theme : "light" %>';

      function getThemePreference() {
        // Check cookie first (for immediate updates)
        const cookieMatch = document.cookie.match(/user_theme=([^;]+)/);
        if (cookieMatch) {
          return cookieMatch[1];
        }

        // Use server-side user setting
        return serverTheme;
      }

      function applyTheme() {
        const theme = getThemePreference();
        const html = document.documentElement;

        if (theme === 'dark') {
          html.classList.add('dark');
        } else if (theme === 'auto') {
          const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          if (prefersDark) {
            html.classList.add('dark');
          }
        }
        // For 'light' theme, no class is needed (default)
      }

      // Apply theme immediately
      applyTheme();
    })();
  </script>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
  <link rel="stylesheet" href="/css/tailwind.css" id="tailwind-css">
  <link rel="stylesheet" href="/css/spa-loader.css">

  <!-- Production Cookie Manager - CSP Compliant -->
    <!-- CSP Compliant Scripts -->
  <script src="/js/cookie-manager-production.js" defer></script>
  <script src="/js/confirmation-system.js" defer></script>

  <!-- CSS Fallback Handler -->
  <script>
    // CSP-compliant CSS fallback handler
    document.addEventListener('DOMContentLoaded', function() {
      const tailwindCSS = document.getElementById('tailwind-css');
      if (tailwindCSS) {
        tailwindCSS.addEventListener('error', function() {
          console.warn('Tailwind CSS failed to load, falling back to styles.css');
          this.href = '/css/styles.css';
        });
      }
    });
  </script>


  <!-- Enhanced fallback CSS with dark mode support -->
  <style>
    /* Emergency fallback styles with dark mode support */
    body {
      font-family: system-ui, -apple-system, sans-serif;
      background: #f9fafb;
      color: #111827;
      margin: 0;
      transition: background-color 0.2s ease, color 0.2s ease;
    }
    .dark body { background: #111827; color: #f9fafb; }
    .container { margin: 0 auto; padding: 20px; }
    .btn { padding: 8px 16px; border-radius: 6px; border: none; cursor: pointer; transition: all 0.2s ease; }
    .btn-primary { background: #3b82f6; color: white; }
    .btn-primary:hover { background: #2563eb; }
    .card {
      background: white;
      border-radius: 8px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
      padding: 20px;
      margin: 10px 0;
      transition: background-color 0.2s ease;
    }
    .dark .card { background: #1f2937; }
    .error { color: #dc2626; }
    .success { color: #16a34a; }
    .warning { color: #ca8a04; }

    /* Prevent flash of unstyled content */
    .fade-in {
      opacity: 0;
      animation: fadeIn 0.3s ease-out forwards;
    }
    @keyframes fadeIn {
      to { opacity: 1; }
    }

    /* Search Results Background Fixes */
    #searchResults {
      background: linear-gradient(135deg, #eff6ff 0%, #dbeafe 100%) !important;
      backdrop-filter: blur(8px);
      -webkit-backdrop-filter: blur(8px);
      border: 2px solid #3b82f6 !important;
      border-radius: 8px !important;
    }
    .dark #searchResults {
      background: linear-gradient(135deg, #1f2937 0%, #111827 100%) !important;
      border: 2px solid #60a5fa !important;
    }

    #employee_search_results_create {
      background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%) !important;
      backdrop-filter: blur(8px);
      -webkit-backdrop-filter: blur(8px);
      border: 2px solid #10b981 !important;
      border-radius: 8px !important;
    }
    .dark #employee_search_results_create {
      background: linear-gradient(135deg, #1f2937 0%, #111827 100%) !important;
      border: 2px solid #34d399 !important;
    }

    /* Ensure search results are visible */
    #searchResults:not(.hidden), #employee_search_results_create:not(.hidden) {
      display: block !important;
      opacity: 1 !important;
      visibility: visible !important;
    }

    /* Enhanced styling for search results */
    #searchResults, #employee_search_results_create {
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05) !important;
    }

    /* Ensure no white borders on search result items */
    #searchResults > div, #employee_search_results_create > div {
      border-color: inherit !important;
    }

    /* Override any conflicting border styles */
    #searchResults .border-gray-200, #searchResults .border-gray-300,
    #employee_search_results_create .border-gray-200, #employee_search_results_create .border-gray-300 {
      border-color: currentColor !important;
    }

    /* Ensure proper order and structure for search results */
    .search-results-content {
      display: flex;
      flex-direction: column;
    }

    #searchResults, #employee_search_results_create {
      display: flex !important;
      flex-direction: column !important;
    }

    /* Ensure header stays at top and proper flow */
    #searchResults > div:first-child, #employee_search_results_create > div:first-child {
      order: -1;
    }

    /* Ensure no overlap and proper stacking */
    #searchResults .sticky, #employee_search_results_create .sticky {
      z-index: 10;
      position: sticky !important;
      top: 0 !important;
    }

    /* Ensure content flows below header */
    .search-results-content > div {
      position: relative;
      z-index: 1;
    }
  </style>

  <!-- CSS loading will be handled by css-loader.js -->

</head>
<body class="min-h-screen text-gray-900 dark:text-white bg-gray-50 dark:bg-gray-900"
  data-theme="<%= user && user.settings && user.settings.theme ? user.settings.theme : 'light' %>">
  <div class="flex min-h-screen <%= locals.isDashboardPage ? 'bg-gray-50 dark:bg-gray-900' : '' %>">
    <% if (user) { %>
      <%- include('partials/sidebar') %>
    <% } %>

    <div class="flex-1 flex flex-col">
      <% if (user) { %>
        <header class="flex items-center justify-between px-8 py-4 bg-white dark:bg-gray-800 shadow-md">
          <div class="flex items-center gap-4">
            <div class="text-sm text-gray-500 dark:text-gray-300 flex items-center gap-2">
              <% if (title === 'Dashboard') { %>
                <span class="font-semibold text-indigo-900 dark:text-indigo-300"><%= t('dashboard') %></span>
              <% } else { %>
                <a href="/" class="hover:underline text-indigo-900 dark:text-indigo-300"><%= t('dashboard') %></a>
                <i class="fas fa-chevron-right text-xs"></i>
                <span class="font-semibold"><%= title %></span>
              <% } %>
            </div>
          </div>
          <div class="flex items-center gap-6">

            <!-- User Dropdown -->
            <div class="relative">
              <button class="flex items-center gap-2 focus:outline-none" id="userDropdownToggle">
                <div class="w-9 h-9 rounded-full bg-indigo-900 dark:bg-indigo-700 flex items-center justify-center text-white font-bold text-lg">
                  <%= user.name.charAt(0).toUpperCase() %>
                </div>
                <span class="font-medium text-gray-900 dark:text-white"><%= user.name %></span>
                <i class="fas fa-chevron-down text-xs text-gray-400"></i>
              </button>
              <div class="absolute right-0 mt-2 w-72 bg-white dark:bg-gray-800 rounded-xl shadow-lg z-50 hidden" id="userDropdownMenu">
                <div class="flex flex-col items-center px-6 py-5 border-b border-gray-100 dark:border-gray-700">
                  <div class="w-14 h-14 rounded-full flex items-center justify-center text-white font-bold text-2xl mb-3
                    <%
                      let mainRole = userRoles[0] ? userRoles[0].toLowerCase() : '';
                      let avatarBg = mainRole.includes('developer') ? 'bg-purple-700 dark:bg-purple-900' :
                                     (mainRole.includes('admin') || mainRole.includes('super')) ? 'bg-red-700 dark:bg-red-900' :
                                     mainRole.includes('manager') ? 'bg-yellow-600 dark:bg-yellow-900' :
                                     'bg-blue-700 dark:bg-blue-900';
                    %>
                    <%= avatarBg %>">
                    <%= user.name.charAt(0).toUpperCase() %>
                  </div>
                  <div class="flex flex-col items-center w-full">
                    <div class="flex flex-col items-center justify-center mb-1 w-full">
                      <span class="font-semibold text-gray-900 dark:text-white text-base"><%= user.name %></span>
                      <span class="text-xs text-gray-500 dark:text-gray-300"><%= user.email %></span>
                    </div>
                    <div class="flex flex-wrap justify-center gap-2 w-full">
                      <% userRoles.forEach(role => {
                        let roleLower = role.toLowerCase();
                        let badgeColor = roleLower.includes('developer') ? 'bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200 ring-2 ring-purple-400/40' :
                                        (roleLower.includes('admin') || roleLower.includes('super')) ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 ring-2 ring-red-400/40' :
                                        roleLower.includes('manager') ? 'bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200 ring-2 ring-yellow-400/40' :
                                        'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 ring-2 ring-blue-400/40';
                        let iconBg = roleLower.includes('developer') ? 'bg-purple-400/80' :
                                     (roleLower.includes('admin') || roleLower.includes('super')) ? 'bg-red-400/80' :
                                     roleLower.includes('manager') ? 'bg-yellow-400/80' :
                                     'bg-blue-400/80';
                        let icon = roleLower.includes('developer') ? 'fa-code' :
                                   roleLower.includes('admin') ? 'fa-user-shield' :
                                   roleLower.includes('manager') ? 'fa-user-tie' : 'fa-user';
                      %>
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold shadow-sm transition <%= badgeColor %> mb-1">
                          <span class="w-5 h-5 flex items-center justify-center rounded-full mr-2 <%= iconBg %> text-white">
                            <i class="fas <%= icon %> text-xs"></i>
                          </span>
                          <%= role %>
                        </span>
                      <% }) %>
                    </div>
                  </div>
                </div>
                <div class="flex flex-col py-2">
                  <a href="/users/profile" class="flex items-center gap-2 px-6 py-2 hover:bg-gray-100 dark:hover:bg-gray-900 text-gray-900 dark:text-white">
                    <i class="fas fa-user-circle"></i> <%= t('my_profile') %>
                  </a>
                  <a href="/users/settings" class="flex items-center gap-2 px-6 py-2 hover:bg-gray-100 dark:hover:bg-gray-900 text-gray-900 dark:text-white">
                    <i class="fas fa-cog"></i> <%= t('settings') %>
                  </a>
                  <div class="border-t border-gray-100 dark:border-gray-700 my-2"></div>
                  <a href="/auth/logout" class="flex items-center gap-2 px-6 py-2 text-red-600 hover:bg-gray-100 dark:hover:bg-gray-900">
                    <i class="fas fa-sign-out-alt"></i> <%= t('logout') %>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </header>
      <% } %>

      <main id="mainContent">
        <%
        // Ensure messages object exists and has proper structure
        const flashMessages = locals.messages || {};
        const errorMessages = flashMessages.error || [];
        const successMessages = flashMessages.success || [];
        const infoMessages = flashMessages.info || [];
        %>

        <% if (errorMessages.length > 0) { %>
          <div class="fixed top-20 right-8 z-50 flex flex-col items-end" id="flash-container">
            <% errorMessages.forEach(function(msg, idx) { %>
              <div class="flash-message bg-red-500 text-white px-4 py-2 rounded shadow mb-2 animate-fade-in flex items-center cursor-pointer" data-index="<%= idx %>">
                <i class="fas fa-exclamation-triangle mr-2"></i>
                <span><%= msg %></span>
                <button class="ml-3 text-white focus:outline-none" data-action="remove-element" data-param-target=".flash-message">
                  <i class="fas fa-times"></i>
                </button>
              </div>
            <% }) %>
          </div>
        <% } %>

        <% if (successMessages.length > 0) { %>
          <div class="fixed top-20 right-8 z-50 flex flex-col items-end" id="success-flash-container">
            <% successMessages.forEach(function(msg, idx) { %>
              <div class="flash-message bg-green-500 text-white px-4 py-2 rounded shadow mb-2 animate-fade-in flex items-center cursor-pointer" data-index="<%= idx %>">
                <i class="fas fa-check-circle mr-2"></i>
                <span><%= msg %></span>
                <button class="ml-3 text-white focus:outline-none" data-action="remove-element" data-param-target=".flash-message">
                  <i class="fas fa-times"></i>
                </button>
              </div>
            <% }) %>
          </div>
        <% } %>

        <% if (infoMessages.length > 0) { %>
          <div class="fixed top-20 right-8 z-50 flex flex-col items-end" id="info-flash-container">
            <% infoMessages.forEach(function(msg, idx) { %>
              <div class="flash-message bg-blue-500 text-white px-4 py-2 rounded shadow mb-2 animate-fade-in flex items-center cursor-pointer" data-index="<%= idx %>">
                <i class="fas fa-info-circle mr-2"></i>
                <span><%= msg %></span>
                <button class="ml-3 text-white focus:outline-none" data-action="remove-element" data-param-target=".flash-message">
                  <i class="fas fa-times"></i>
                </button>
              </div>
            <% }) %>
          </div>
        <% } %>
        <%- include(body, locals) %>
      </main>

      <% if (user) { %>
      <footer class="px-8 py-4 text-center text-xs text-gray-400 dark:text-gray-500">
        &copy; <%= new Date().getFullYear() %> IT Asset Manager | All rights reserved
      </footer>
      <% } %>
    </div>
  </div>



  <!-- Core Scripts Only -->
  <script src="/js/css-loader.js"></script>
  <script src="/js/event-system.js"></script>
  <script src="/js/main.js"></script>
  <script src="/js/theme-handler.js"></script>
  <!-- Load animation controller LAST to ensure it takes precedence -->
  <!-- <script src="/js/simple-navigation.js"></script> -->
  <script>
document.querySelectorAll('.flash-message').forEach(function(el) {
  // Remove on click (already handled by button, but allow clicking anywhere)
  el.addEventListener('click', function(e) {
    if (!e.target.classList.contains('fa-times')) {
      el.classList.add('fade-out');
      setTimeout(() => el.remove(), 500);
    }
  });
  // Auto remove after 10 seconds
  setTimeout(function() {
    el.classList.add('fade-out');
    setTimeout(() => el.remove(), 500);
  }, 10000);
});
</script>

  <% if (user) { %>
  <div id="user-data"
       data-settings="<%= user.settings ? JSON.stringify(user.settings) : '{}' %>"
       style="display: none;"></div>
  <% } %>

  <!-- Cookie Consent Popup - Show for all users -->
  <div id="cookieConsentPopup" class="fixed inset-0 bg-black bg-opacity-50 z-[9999] flex items-center justify-center hidden">
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-2xl max-w-md mx-4 p-6 border border-gray-200 dark:border-gray-700">
      <div class="flex items-start gap-3 mb-4">
        <i class="fas fa-cookie-bite text-purple-600 text-2xl mt-1"></i>
        <div class="flex-1">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">Cookie Preferences</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400 leading-relaxed">
            We use cookies to improve your experience and analyze site usage. Your privacy is important to us.
          </p>
        </div>
      </div>
      <div class="flex flex-col sm:flex-row gap-2">
        <button id="acceptAllCookiesBtn" class="flex-1 px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg transition text-sm font-medium">
          Accept All
        </button>
        <button id="showCookieManagerBtn" class="flex-1 px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition text-sm font-medium">
          Customize
        </button>
        <button id="rejectCookiesBtn" class="px-4 py-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500 text-gray-700 dark:text-gray-200 rounded-lg transition text-sm font-medium">
          Reject
        </button>
      </div>
    </div>
  </div>

  <!-- Cookie Manager Modal -->
  <div id="cookieManagerModal" class="fixed inset-0 bg-black bg-opacity-50 z-[9998] flex items-center justify-center hidden">
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-2xl max-w-4xl mx-4 max-h-[90vh] overflow-y-auto">
      <div class="p-6 border-b border-gray-200 dark:border-gray-700">
        <div class="flex items-center justify-between">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white flex items-center gap-2">
            <i class="fas fa-cookie-bite text-purple-600"></i>
            Cookie Manager & Privacy Settings
          </h2>
          <button id="closeCookieManagerBtn" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
            <i class="fas fa-times text-xl"></i>
          </button>
        </div>
      </div>

      <div class="p-6">
        <!-- Cookie Categories -->
        <div class="space-y-6">
          <!-- Essential Cookies -->
          <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4">
            <div class="flex items-center justify-between mb-3">
              <div>
                <h3 class="font-semibold text-gray-900 dark:text-white">Essential Cookies</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">Required for basic site functionality</p>
              </div>
              <div class="bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300 px-3 py-1 rounded-full text-sm font-medium">
                Always Active
              </div>
            </div>
            <div class="space-y-2 text-sm text-gray-700 dark:text-gray-300">
              <div>• Session authentication cookies</div>
              <div>• Security tokens (CSRF protection)</div>
              <div>• Basic functionality preferences</div>
            </div>
          </div>

          <!-- Performance Cookies -->
          <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4">
            <div class="flex items-center justify-between mb-3">
              <div>
                <h3 class="font-semibold text-gray-900 dark:text-white">Performance & Analytics</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">Help us understand how you use the site</p>
              </div>
              <label class="relative inline-flex items-center cursor-pointer">
                <input type="checkbox" id="performanceCookies" class="sr-only peer">
                <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
              </label>
            </div>
            <div class="space-y-2 text-sm text-gray-700 dark:text-gray-300">
              <div>• Page load performance tracking</div>
              <div>• User interaction analytics</div>
              <div>• System performance monitoring</div>
            </div>
          </div>

          <!-- Preference Cookies -->
          <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4">
            <div class="flex items-center justify-between mb-3">
              <div>
                <h3 class="font-semibold text-gray-900 dark:text-white">Preference Cookies</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">Remember your preferences and settings</p>
              </div>
              <label class="relative inline-flex items-center cursor-pointer">
                <input type="checkbox" id="preferenceCookies" class="sr-only peer">
                <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
              </label>
            </div>
            <div class="space-y-2 text-sm text-gray-700 dark:text-gray-300">
              <div>• Dark/light mode preferences</div>
              <div>• Language settings</div>
              <div>• Dashboard customizations</div>
            </div>
          </div>
        </div>

        <!-- Actions -->
        <div class="mt-6 flex gap-3">
          <button id="clearAllCookiesBtn" class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition">
            <i class="fas fa-trash mr-2"></i>Clear All Cookies
          </button>
          <button id="exportCookieDataBtn" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition">
            <i class="fas fa-download mr-2"></i>Export Data
          </button>
          <button id="closeCookieManagerBtn2" class="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition ml-auto">
            Close
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Global Cookie Management Script -->
  <script>
    // Global cookie management functions
    function checkCookieConsent() {
      if (!localStorage.getItem('cookieConsent')) {
        setTimeout(() => {
          document.getElementById('cookieConsentPopup').classList.remove('hidden');
        }, 1000);
      }
    }

    function showCookieManager() {
      document.getElementById('cookieConsentPopup').classList.add('hidden');
      document.getElementById('cookieManagerModal').classList.remove('hidden');
      loadCookiePreferences();
    }

    function hideCookieManager() {
      document.getElementById('cookieManagerModal').classList.add('hidden');
    }

    function acceptAllCookies() {
      localStorage.setItem('allowPerformanceCookies', 'true');
      localStorage.setItem('allowPreferenceCookies', 'true');
      localStorage.setItem('cookieConsent', 'true');
      document.getElementById('cookieConsentPopup').classList.add('hidden');
      showToast('success', 'All cookies accepted. Thank you!');
    }

    function rejectCookies() {
      localStorage.setItem('allowPerformanceCookies', 'false');
      localStorage.setItem('allowPreferenceCookies', 'false');
      localStorage.setItem('cookieConsent', 'true');
      document.getElementById('cookieConsentPopup').classList.add('hidden');
      showToast('info', 'Only essential cookies will be used.');
    }

    function loadCookiePreferences() {
      const performanceCheckbox = document.getElementById('performanceCookies');
      const preferenceCheckbox = document.getElementById('preferenceCookies');

      if (performanceCheckbox) {
        performanceCheckbox.checked = localStorage.getItem('allowPerformanceCookies') === 'true';
      }
      if (preferenceCheckbox) {
        preferenceCheckbox.checked = localStorage.getItem('allowPreferenceCookies') === 'true';
      }
    }

    function updateCookiePreferences() {
      const performanceCheckbox = document.getElementById('performanceCookies');
      const preferenceCheckbox = document.getElementById('preferenceCookies');

      if (performanceCheckbox && preferenceCheckbox) {
        localStorage.setItem('allowPerformanceCookies', performanceCheckbox.checked);
        localStorage.setItem('allowPreferenceCookies', preferenceCheckbox.checked);
        localStorage.setItem('cookieConsent', 'true');

        document.getElementById('cookieConsentPopup').classList.add('hidden');
        showToast('success', 'Cookie preferences updated!');
      }
    }



    function deleteCookie(name) {
      // Delete the cookie by setting it to expire in the past
      document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;
      document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=${window.location.hostname};`;
      document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=.${window.location.hostname};`;

      showToast('info', `Cookie "${name}" deleted`);
    }

    function clearAllCookies() {
      if (confirm('Are you sure you want to clear all cookies? This will log you out and reset all preferences.')) {
        const cookies = document.cookie.split(';');
        for (let cookie of cookies) {
          const name = cookie.trim().split('=')[0];
          if (name) {
            document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;
            document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=${window.location.hostname};`;
            document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=.${window.location.hostname};`;
          }
        }

        localStorage.clear();
        sessionStorage.clear();

        showToast('success', 'All cookies cleared');
        setTimeout(() => window.location.reload(), 2000);
      }
    }

    function exportCookieData() {
      const data = {
        cookies: document.cookie.split(';').map(cookie => {
          const [name, value] = cookie.trim().split('=');
          return { name, value: value ? decodeURIComponent(value) : '' };
        }).filter(c => c.name),
        localStorage: Object.keys(localStorage).reduce((acc, key) => {
          acc[key] = localStorage.getItem(key);
          return acc;
        }, {}),
        sessionStorage: Object.keys(sessionStorage).reduce((acc, key) => {
          acc[key] = sessionStorage.getItem(key);
          return acc;
        }, {}),
        preferences: {
          performanceCookies: localStorage.getItem('allowPerformanceCookies') === 'true',
          preferenceCookies: localStorage.getItem('allowPreferenceCookies') === 'true',
          consentGiven: localStorage.getItem('cookieConsent') === 'true'
        },
        exportDate: new Date().toISOString()
      };

      const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `cookie-data-${new Date().toISOString().split('T')[0]}.json`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);

      showToast('success', 'Cookie data exported successfully');
    }

    function showToast(type, message) {
      const toast = document.createElement('div');
      toast.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-[9999] transition-all duration-300 transform translate-x-full`;

      const colors = {
        success: 'bg-green-500 text-white',
        error: 'bg-red-500 text-white',
        warning: 'bg-yellow-500 text-black',
        info: 'bg-blue-500 text-white'
      };

      const icons = {
        success: 'fas fa-check',
        error: 'fas fa-times',
        warning: 'fas fa-exclamation-triangle',
        info: 'fas fa-info-circle'
      };

      toast.className += ` ${colors[type]}`;
      toast.innerHTML = `
        <div class="flex items-center gap-2">
          <i class="${icons[type]}"></i>
          <span>${message}</span>
        </div>
      `;

      document.body.appendChild(toast);

      setTimeout(() => {
        toast.classList.remove('translate-x-full');
        toast.classList.add('translate-x-0');
      }, 100);

      setTimeout(() => {
        toast.classList.remove('translate-x-0');
        toast.classList.add('translate-x-full');
        setTimeout(() => {
          if (document.body.contains(toast)) {
            document.body.removeChild(toast);
          }
        }, 300);
      }, 3000);
    }

    // Initialize cookie consent check when page loads
    document.addEventListener('DOMContentLoaded', function() {
      checkCookieConsent();
    });
  </script>

</body>
</html>

<style>
.fade-in {
  opacity: 0;
  transform: translateY(16px);
  animation: fadeInUp 0.7s cubic-bezier(.4,0,.2,1) forwards;
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.flash-message {
  transition: opacity 0.5s ease;
}

.flash-message.fade-out {
  opacity: 0;
  pointer-events: none;
}

/* Smooth transitions for all interactive elements */
a, button, input, select, textarea {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Enhanced button states */
button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none !important;
}

/* Smooth hover effects */
.nav-link, .btn, button, a[class*="btn"] {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.nav-link:hover, .btn:hover, button:hover:not(:disabled), a[class*="btn"]:hover {
  transform: translateY(-1px);
}

/* Page content transitions */
main, #mainContent {
  transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Loading states */
.loading-state {
  position: relative;
  overflow: hidden;
}

.loading-state::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
  animation: loading-shimmer 1.5s infinite;
  z-index: 1;
}

@keyframes loading-shimmer {
  0% { left: -100%; }
  100% { left: 100%; }
}

/* Dark mode adjustments */
[data-theme="dark"] .loading-state::before {
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
}

/* Prevent animation conflicts */
* {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}
</style>

