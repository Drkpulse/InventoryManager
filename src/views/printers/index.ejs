<div class="container mx-auto px-4 py-8">
  <!-- Page Header -->
  <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-8">
    <div>
      <h1 class="text-2xl font-bold text-gray-800 dark:text-gray-100 mb-2 flex items-center gap-2">
        <i class="fas fa-print"></i> Printer Assets Management
      </h1>
    </div>
    <div class="flex flex-wrap gap-3 mt-4 md:mt-0">
      <a href="/printers/new" class="group px-4 py-2 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold rounded-lg transition-all duration-300 hover:scale-105 hover:shadow-lg">
        <i class="fas fa-plus mr-2 group-hover:scale-110 transition-transform duration-300"></i> Add New Printer
      </a>
      <button id="exportPrintersBtn" type="button" class="group px-4 py-2 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-semibold rounded-lg transition-all duration-300 hover:scale-105 hover:shadow-lg">
        <i class="fas fa-download mr-2 group-hover:translate-y-1 transition-transform duration-300"></i> Export Printer List
      </button>
    </div>
  </div>

  <!-- Error/Success Messages -->
  <% if (query && query.error) { %>
    <div class="mb-6 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-700 rounded-lg p-4">
      <div class="flex items-center gap-2 text-red-800 dark:text-red-200">
        <i class="fas fa-exclamation-triangle"></i>
        <span class="font-semibold">Error:</span>
        <% if (query.error === 'printer_not_found') { %>
          Printer not found.
        <% } else { %>
          <%= query.error %>
        <% } %>
      </div>
    </div>
  <% } %>

    <% if (query && query.deleted === 'true') { %>
    <div class="mb-6 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700 rounded-lg p-4">
      <div class="flex items-center gap-2 text-green-800 dark:text-green-200">
        <i class="fas fa-check-circle"></i>
        <span class="font-semibold">Success:</span> Printer deleted successfully.
      </div>
    </div>
  <% } %>

  <!-- Search Bar -->
  <div class="mb-6 bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700 p-4">
    <div class="flex items-center gap-3 mb-2">
      <div class="w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center">
        <i class="fas fa-search text-blue-600 dark:text-blue-300"></i>
      </div>
      <div>
        <label class="block font-semibold text-gray-700 dark:text-gray-200">Search Printer Assets</label>
        <p class="text-xs text-gray-500 dark:text-gray-400">Find printers by ID, name, brand, model, or client</p>
      </div>
    </div>
    <div class="relative">
      <input type="text" id="printerSearch" placeholder="Search by Asset ID, Name, Brand, Model, or Client..." autocomplete="off"
        class="w-full px-4 py-2 pl-10 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition"
        value="<%= currentFilters && currentFilters.q || '' %>">
      <i class="fas fa-search absolute left-3 top-1/2 -translate-y-1/2 text-blue-500 dark:text-blue-400"></i>
    </div>
  </div>

  <!-- Advanced Filters Panel -->
  <div class="mb-6 bg-gray-50 dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg shadow">
    <div class="flex items-center justify-between px-6 py-4 cursor-pointer select-none" id="filtersToggle">
      <div class="flex items-center gap-2">
        <i class="fas fa-filter"></i>
        <h3 class="font-semibold text-gray-700 dark:text-gray-200">Advanced Filters</h3>
        <span class="ml-2 inline-flex items-center justify-center w-6 h-6 rounded-full bg-blue-600 text-white text-xs font-bold" id="filterBadge">0</span>
      </div>
      <div class="flex items-center gap-2">
        <span class="text-sm text-gray-500 dark:text-gray-400" id="appliedFiltersPreview">No filters applied</span>
        <i class="fas fa-chevron-down toggle-icon"></i>
      </div>
    </div>
    <div class="px-6 py-4 border-t border-gray-200 dark:border-gray-700 hidden" id="filtersContent">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-4">
        <div>
          <label for="clientFilter" class="block text-xs font-semibold text-gray-700 dark:text-gray-300 mb-1">Client</label>
          <select id="clientFilter" name="client_id"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
            <option value="">All Clients</option>
            <% if (typeof clients !== 'undefined') { %>
              <% clients.forEach(client => { %>
                <option value="<%= client.id %>" <%= (currentFilters && currentFilters.client_id == client.id) ? 'selected' : '' %>>
                  <%= client.name %> (<%= client.pnumber %>)
                </option>
              <% }) %>
            <% } %>
          </select>
        </div>
        <div>
          <label for="statusFilter" class="block text-xs font-semibold text-gray-700 dark:text-gray-300 mb-1">Status</label>
          <select id="statusFilter" name="status_id"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
            <option value="">All Statuses</option>
            <% if (statuses && statuses.length > 0) { %>
              <% statuses.forEach(status => { %>
                <option value="<%= status.id %>" <%= currentFilters && currentFilters.status_id == status.id ? 'selected' : '' %>>
                  <%= status.name %>
                </option>
              <% }); %>
            <% } %>
          </select>
        </div>
        <div>
          <label class="block text-xs font-semibold text-gray-700 dark:text-gray-300 mb-1">Cost Range</label>
          <div class="flex gap-2">
            <input type="number" id="minPrice" name="minPrice" placeholder="Min €" min="0" step="0.01" value="<%= currentFilters && currentFilters.minPrice ? currentFilters.minPrice : '' %>"
              class="w-1/2 px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
            <span class="self-center text-gray-500 dark:text-gray-400">to</span>
            <input type="number" id="maxPrice" name="maxPrice" placeholder="Max €" min="0" step="0.01" value="<%= currentFilters && currentFilters.maxPrice ? currentFilters.maxPrice : '' %>"
              class="w-1/2 px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">
          </div>
        </div>
      </div>
      <div class="flex flex-wrap items-center justify-between gap-4">
        <div class="flex flex-wrap gap-2 text-xs" id="appliedFilters"></div>
        <div class="flex gap-2">
          <button type="button" id="applyFilters" class="group px-4 py-2 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold rounded-lg transition-all duration-300 flex items-center gap-2 hover:scale-105 hover:shadow-lg">
            <i class="fas fa-search group-hover:scale-110 transition-transform duration-300"></i> Apply Filters
          </button>
          <button type="button" id="resetFilters" class="group px-4 py-2 bg-gradient-to-r from-gray-400 to-gray-600 hover:from-gray-500 hover:to-gray-700 text-white font-semibold rounded-lg transition-all duration-300 flex items-center gap-2 hover:scale-105 hover:shadow-lg">
            <i class="fas fa-times group-hover:-rotate-12 transition-transform duration-300"></i> Reset All
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Printers Table -->
  <div>
    <%- include('_table') %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Simple search - redirects to search URL
  const searchInput = document.getElementById('printerSearch');

  if (searchInput) {
    let searchTimeout;

    searchInput.addEventListener('input', function(e) {
      clearTimeout(searchTimeout);
      const searchTerm = e.target.value.trim();

      searchTimeout = setTimeout(() => {
        const currentUrl = new URL(window.location.href);

        if (searchTerm === '') {
          currentUrl.searchParams.delete('q');
          currentUrl.searchParams.set('page', '1');
        } else {
          currentUrl.searchParams.set('q', searchTerm);
          currentUrl.searchParams.set('page', '1');
        }

        window.location.href = currentUrl.toString();
      }, 500);
    });
  }

  // Filter toggle functionality
  const filterToggle = document.getElementById('filtersToggle');
  const filterContent = document.getElementById('filtersContent');

  if (filterToggle && filterContent) {
    filterContent.classList.add('hidden');
    const toggleIcon = filterToggle.querySelector('i.fa-chevron-up, i.fa-chevron-down');
    if (toggleIcon) {
      toggleIcon.classList.remove('fa-chevron-up');
      toggleIcon.classList.add('fa-chevron-down');
    }

    const urlParams = new URLSearchParams(window.location.search);
    const hasActiveFilters = urlParams.get('client_id') || urlParams.get('status_id') ||
                            urlParams.get('minPrice') || urlParams.get('maxPrice');
    if (hasActiveFilters) {
      filterContent.classList.remove('hidden');
      if (toggleIcon) {
        toggleIcon.classList.remove('fa-chevron-down');
        toggleIcon.classList.add('fa-chevron-up');
      }
    }

    filterToggle.addEventListener('click', function() {
      filterContent.classList.toggle('hidden');
      const icon = filterToggle.querySelector('i.fa-chevron-down, i.fa-chevron-up');
      if (icon) {
        icon.classList.toggle('fa-chevron-down');
        icon.classList.toggle('fa-chevron-up');
      }
    });
  }

  // Apply filters button
  const applyFiltersBtn = document.getElementById('applyFilters');

  if (applyFiltersBtn) {
    applyFiltersBtn.addEventListener('click', function() {
      const currentUrl = new URL(window.location.href);

      const clientFilter = document.getElementById('clientFilter');
      const statusFilter = document.getElementById('statusFilter');
      const minPrice = document.getElementById('minPrice');
      const maxPrice = document.getElementById('maxPrice');

      if (clientFilter && clientFilter.value) {
        currentUrl.searchParams.set('client_id', clientFilter.value);
      } else {
        currentUrl.searchParams.delete('client_id');
      }

      if (statusFilter && statusFilter.value) {
        currentUrl.searchParams.set('status_id', statusFilter.value);
      } else {
        currentUrl.searchParams.delete('status_id');
      }

      if (minPrice && minPrice.value) {
        currentUrl.searchParams.set('minPrice', minPrice.value);
      } else {
        currentUrl.searchParams.delete('minPrice');
      }

      if (maxPrice && maxPrice.value) {
        currentUrl.searchParams.set('maxPrice', maxPrice.value);
      } else {
        currentUrl.searchParams.delete('maxPrice');
      }

      currentUrl.searchParams.set('page', '1');
      window.location.href = currentUrl.toString();
    });
  }

  // Reset filters button
  const resetFiltersBtn = document.getElementById('resetFilters');

  if (resetFiltersBtn) {
    resetFiltersBtn.addEventListener('click', function() {
      const currentUrl = new URL(window.location.href);

      currentUrl.searchParams.delete('client_id');
      currentUrl.searchParams.delete('status_id');
      currentUrl.searchParams.delete('minPrice');
      currentUrl.searchParams.delete('maxPrice');
      currentUrl.searchParams.delete('q');
      currentUrl.searchParams.set('page', '1');

      window.location.href = currentUrl.toString();
    });
  }

  // Update filter badge and preview on page load
  function updateFilterBadgeAndPreview() {
    const urlParams = new URLSearchParams(window.location.search);
    const filterBadge = document.getElementById('filterBadge');
    const appliedFiltersPreview = document.getElementById('appliedFiltersPreview');

    let activeFilters = [];

    if (urlParams.get('client_id')) {
      const clientSelect = document.getElementById('clientFilter');
      const selectedOption = clientSelect ? clientSelect.querySelector(`option[value="${urlParams.get('client_id')}"]`) : null;
      if (selectedOption) {
        activeFilters.push(`Client: ${selectedOption.textContent}`);
      }
    }

    if (urlParams.get('status_id')) {
      const statusSelect = document.getElementById('statusFilter');
      const selectedOption = statusSelect ? statusSelect.querySelector(`option[value="${urlParams.get('status_id')}"]`) : null;
      if (selectedOption) {
        activeFilters.push(`Status: ${selectedOption.textContent}`);
      }
    }

    if (urlParams.get('minPrice')) {
      activeFilters.push(`Min Price: €${urlParams.get('minPrice')}`);
    }

    if (urlParams.get('maxPrice')) {
      activeFilters.push(`Max Price: €${urlParams.get('maxPrice')}`);
    }

    if (filterBadge) {
      if (activeFilters.length > 0) {
        filterBadge.textContent = activeFilters.length;
        filterBadge.style.display = '';
      } else {
        filterBadge.style.display = 'none';
      }
    }

    if (appliedFiltersPreview) {
      if (activeFilters.length > 0) {
        appliedFiltersPreview.innerHTML = activeFilters.map(filter =>
          `<span class="inline-flex items-center gap-1 px-2 py-1 text-xs font-medium rounded bg-blue-100 dark:bg-blue-900/20 text-blue-800 dark:text-blue-200">
            <i class="fas fa-filter"></i> ${filter}
          </span>`
        ).join(' ');
      } else {
        appliedFiltersPreview.textContent = 'No filters applied';
      }
    }
  }

  updateFilterBadgeAndPreview();

  const perPageSelect = document.getElementById('printersPerPage');
  if (perPageSelect) {
    perPageSelect.addEventListener('change', function(e) {
      const currentUrl = new URL(window.location.href);
      currentUrl.searchParams.set('perPage', e.target.value);
      currentUrl.searchParams.set('page', '1');
      window.location.href = currentUrl.toString();
    });
  }
});
</script>
